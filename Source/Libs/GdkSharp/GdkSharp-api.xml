<?xml version="1.0"?>
<api parser_version="2">
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Gdk" library="Library.Gdk">
    <enum name="AnchorHints" cname="GdkAnchorHints" gtype="gdk_anchor_hints_get_type" type="flags">
      <member cname="GDK_ANCHOR_FLIP_X" name="FlipX" value="1 &lt;&lt; 0" />
      <member cname="GDK_ANCHOR_FLIP_Y" name="FlipY" value="1 &lt;&lt; 1" />
      <member cname="GDK_ANCHOR_SLIDE_X" name="SlideX" value="1 &lt;&lt; 2" />
      <member cname="GDK_ANCHOR_SLIDE_Y" name="SlideY" value="1 &lt;&lt; 3" />
      <member cname="GDK_ANCHOR_RESIZE_X" name="ResizeX" value="1 &lt;&lt; 4" />
      <member cname="GDK_ANCHOR_RESIZE_Y" name="ResizeY" value="1 &lt;&lt; 5" />
      <member cname="GDK_ANCHOR_FLIP" name="Flip" value="GDK_ANCHOR_FLIP_X | GDK_ANCHOR_FLIP_Y" />
      <member cname="GDK_ANCHOR_SLIDE" name="Slide" value="GDK_ANCHOR_SLIDE_X | GDK_ANCHOR_SLIDE_Y" />
      <member cname="GDK_ANCHOR_RESIZE" name="Resize" value="GDK_ANCHOR_RESIZE_X | GDK_ANCHOR_RESIZE_Y" />
    </enum>
    <enum name="AxisFlags" cname="GdkAxisFlags" gtype="gdk_axis_flags_get_type" type="flags">
      <member cname="GDK_AXIS_FLAG_X" name="X" value="1 &lt;&lt; GDK_AXIS_X" />
      <member cname="GDK_AXIS_FLAG_Y" name="Y" value="1 &lt;&lt; GDK_AXIS_Y" />
      <member cname="GDK_AXIS_FLAG_PRESSURE" name="Pressure" value="1 &lt;&lt; GDK_AXIS_PRESSURE" />
      <member cname="GDK_AXIS_FLAG_XTILT" name="Xtilt" value="1 &lt;&lt; GDK_AXIS_XTILT" />
      <member cname="GDK_AXIS_FLAG_YTILT" name="Ytilt" value="1 &lt;&lt; GDK_AXIS_YTILT" />
      <member cname="GDK_AXIS_FLAG_WHEEL" name="Wheel" value="1 &lt;&lt; GDK_AXIS_WHEEL" />
      <member cname="GDK_AXIS_FLAG_DISTANCE" name="Distance" value="1 &lt;&lt; GDK_AXIS_DISTANCE" />
      <member cname="GDK_AXIS_FLAG_ROTATION" name="Rotation" value="1 &lt;&lt; GDK_AXIS_ROTATION" />
      <member cname="GDK_AXIS_FLAG_SLIDER" name="Slider" value="1 &lt;&lt; GDK_AXIS_SLIDER" />
    </enum>
    <enum name="AxisUse" cname="GdkAxisUse" gtype="gdk_axis_use_get_type" type="enum">
      <member cname="GDK_AXIS_IGNORE" name="Ignore" />
      <member cname="GDK_AXIS_X" name="X" />
      <member cname="GDK_AXIS_Y" name="Y" />
      <member cname="GDK_AXIS_PRESSURE" name="Pressure" />
      <member cname="GDK_AXIS_XTILT" name="Xtilt" />
      <member cname="GDK_AXIS_YTILT" name="Ytilt" />
      <member cname="GDK_AXIS_WHEEL" name="Wheel" />
      <member cname="GDK_AXIS_DISTANCE" name="Distance" />
      <member cname="GDK_AXIS_ROTATION" name="Rotation" />
      <member cname="GDK_AXIS_SLIDER" name="Slider" />
      <member cname="GDK_AXIS_LAST" name="Last" />
    </enum>
    <enum name="ByteOrder" cname="GdkByteOrder" gtype="gdk_byte_order_get_type" type="enum">
      <member cname="GDK_LSB_FIRST" name="LsbFirst" />
      <member cname="GDK_MSB_FIRST" name="MsbFirst" />
    </enum>
    <enum name="CrossingMode" cname="GdkCrossingMode" gtype="gdk_crossing_mode_get_type" type="enum">
      <member cname="GDK_CROSSING_NORMAL" name="Normal" />
      <member cname="GDK_CROSSING_GRAB" name="Grab" />
      <member cname="GDK_CROSSING_UNGRAB" name="Ungrab" />
      <member cname="GDK_CROSSING_GTK_GRAB" name="GtkGrab" />
      <member cname="GDK_CROSSING_GTK_UNGRAB" name="GtkUngrab" />
      <member cname="GDK_CROSSING_STATE_CHANGED" name="StateChanged" />
      <member cname="GDK_CROSSING_TOUCH_BEGIN" name="TouchBegin" />
      <member cname="GDK_CROSSING_TOUCH_END" name="TouchEnd" />
      <member cname="GDK_CROSSING_DEVICE_SWITCH" name="DeviceSwitch" />
    </enum>
    <enum name="CursorType" cname="GdkCursorType" gtype="gdk_cursor_type_get_type" type="enum">
      <member cname="GDK_X_CURSOR" name="XCursor" />
      <member cname="GDK_ARROW" name="Arrow" value="2" />
      <member cname="GDK_BASED_ARROW_DOWN" name="BasedArrowDown" value="4" />
      <member cname="GDK_BASED_ARROW_UP" name="BasedArrowUp" value="6" />
      <member cname="GDK_BOAT" name="Boat" value="8" />
      <member cname="GDK_BOGOSITY" name="Bogosity" value="10" />
      <member cname="GDK_BOTTOM_LEFT_CORNER" name="BottomLeftCorner" value="12" />
      <member cname="GDK_BOTTOM_RIGHT_CORNER" name="BottomRightCorner" value="14" />
      <member cname="GDK_BOTTOM_SIDE" name="BottomSide" value="16" />
      <member cname="GDK_BOTTOM_TEE" name="BottomTee" value="18" />
      <member cname="GDK_BOX_SPIRAL" name="BoxSpiral" value="20" />
      <member cname="GDK_CENTER_PTR" name="CenterPtr" value="22" />
      <member cname="GDK_CIRCLE" name="Circle" value="24" />
      <member cname="GDK_CLOCK" name="Clock" value="26" />
      <member cname="GDK_COFFEE_MUG" name="CoffeeMug" value="28" />
      <member cname="GDK_CROSS" name="Cross" value="30" />
      <member cname="GDK_CROSS_REVERSE" name="CrossReverse" value="32" />
      <member cname="GDK_CROSSHAIR" name="Crosshair" value="34" />
      <member cname="GDK_DIAMOND_CROSS" name="DiamondCross" value="36" />
      <member cname="GDK_DOT" name="Dot" value="38" />
      <member cname="GDK_DOTBOX" name="Dotbox" value="40" />
      <member cname="GDK_DOUBLE_ARROW" name="DoubleArrow" value="42" />
      <member cname="GDK_DRAFT_LARGE" name="DraftLarge" value="44" />
      <member cname="GDK_DRAFT_SMALL" name="DraftSmall" value="46" />
      <member cname="GDK_DRAPED_BOX" name="DrapedBox" value="48" />
      <member cname="GDK_EXCHANGE" name="Exchange" value="50" />
      <member cname="GDK_FLEUR" name="Fleur" value="52" />
      <member cname="GDK_GOBBLER" name="Gobbler" value="54" />
      <member cname="GDK_GUMBY" name="Gumby" value="56" />
      <member cname="GDK_HAND1" name="Hand1" value="58" />
      <member cname="GDK_HAND2" name="Hand2" value="60" />
      <member cname="GDK_HEART" name="Heart" value="62" />
      <member cname="GDK_ICON" name="Icon" value="64" />
      <member cname="GDK_IRON_CROSS" name="IronCross" value="66" />
      <member cname="GDK_LEFT_PTR" name="LeftPtr" value="68" />
      <member cname="GDK_LEFT_SIDE" name="LeftSide" value="70" />
      <member cname="GDK_LEFT_TEE" name="LeftTee" value="72" />
      <member cname="GDK_LEFTBUTTON" name="Leftbutton" value="74" />
      <member cname="GDK_LL_ANGLE" name="LlAngle" value="76" />
      <member cname="GDK_LR_ANGLE" name="LrAngle" value="78" />
      <member cname="GDK_MAN" name="Man" value="80" />
      <member cname="GDK_MIDDLEBUTTON" name="Middlebutton" value="82" />
      <member cname="GDK_MOUSE" name="Mouse" value="84" />
      <member cname="GDK_PENCIL" name="Pencil" value="86" />
      <member cname="GDK_PIRATE" name="Pirate" value="88" />
      <member cname="GDK_PLUS" name="Plus" value="90" />
      <member cname="GDK_QUESTION_ARROW" name="QuestionArrow" value="92" />
      <member cname="GDK_RIGHT_PTR" name="RightPtr" value="94" />
      <member cname="GDK_RIGHT_SIDE" name="RightSide" value="96" />
      <member cname="GDK_RIGHT_TEE" name="RightTee" value="98" />
      <member cname="GDK_RIGHTBUTTON" name="Rightbutton" value="100" />
      <member cname="GDK_RTL_LOGO" name="RtlLogo" value="102" />
      <member cname="GDK_SAILBOAT" name="Sailboat" value="104" />
      <member cname="GDK_SB_DOWN_ARROW" name="SbDownArrow" value="106" />
      <member cname="GDK_SB_H_DOUBLE_ARROW" name="SbHDoubleArrow" value="108" />
      <member cname="GDK_SB_LEFT_ARROW" name="SbLeftArrow" value="110" />
      <member cname="GDK_SB_RIGHT_ARROW" name="SbRightArrow" value="112" />
      <member cname="GDK_SB_UP_ARROW" name="SbUpArrow" value="114" />
      <member cname="GDK_SB_V_DOUBLE_ARROW" name="SbVDoubleArrow" value="116" />
      <member cname="GDK_SHUTTLE" name="Shuttle" value="118" />
      <member cname="GDK_SIZING" name="Sizing" value="120" />
      <member cname="GDK_SPIDER" name="Spider" value="122" />
      <member cname="GDK_SPRAYCAN" name="Spraycan" value="124" />
      <member cname="GDK_STAR" name="Star" value="126" />
      <member cname="GDK_TARGET" name="Target" value="128" />
      <member cname="GDK_TCROSS" name="Tcross" value="130" />
      <member cname="GDK_TOP_LEFT_ARROW" name="TopLeftArrow" value="132" />
      <member cname="GDK_TOP_LEFT_CORNER" name="TopLeftCorner" value="134" />
      <member cname="GDK_TOP_RIGHT_CORNER" name="TopRightCorner" value="136" />
      <member cname="GDK_TOP_SIDE" name="TopSide" value="138" />
      <member cname="GDK_TOP_TEE" name="TopTee" value="140" />
      <member cname="GDK_TREK" name="Trek" value="142" />
      <member cname="GDK_UL_ANGLE" name="UlAngle" value="144" />
      <member cname="GDK_UMBRELLA" name="Umbrella" value="146" />
      <member cname="GDK_UR_ANGLE" name="UrAngle" value="148" />
      <member cname="GDK_WATCH" name="Watch" value="150" />
      <member cname="GDK_XTERM" name="Xterm" value="152" />
      <member cname="GDK_LAST_CURSOR" name="LastCursor" />
      <member cname="GDK_BLANK_CURSOR" name="BlankCursor" value="-2" />
      <member cname="GDK_CURSOR_IS_PIXMAP" name="CursorIsPixmap" value="-1" />
    </enum>
    <enum name="DevicePadFeature" cname="GdkDevicePadFeature" gtype="gdk_device_pad_feature_get_type" type="enum">
      <member cname="GDK_DEVICE_PAD_FEATURE_BUTTON" name="Button" />
      <member cname="GDK_DEVICE_PAD_FEATURE_RING" name="Ring" />
      <member cname="GDK_DEVICE_PAD_FEATURE_STRIP" name="Strip" />
    </enum>
    <enum name="DeviceToolType" cname="GdkDeviceToolType" gtype="gdk_device_tool_type_get_type" type="enum">
      <member cname="GDK_DEVICE_TOOL_TYPE_UNKNOWN" name="Unknown" />
      <member cname="GDK_DEVICE_TOOL_TYPE_PEN" name="Pen" />
      <member cname="GDK_DEVICE_TOOL_TYPE_ERASER" name="Eraser" />
      <member cname="GDK_DEVICE_TOOL_TYPE_BRUSH" name="Brush" />
      <member cname="GDK_DEVICE_TOOL_TYPE_PENCIL" name="Pencil" />
      <member cname="GDK_DEVICE_TOOL_TYPE_AIRBRUSH" name="Airbrush" />
      <member cname="GDK_DEVICE_TOOL_TYPE_MOUSE" name="Mouse" />
      <member cname="GDK_DEVICE_TOOL_TYPE_LENS" name="Lens" />
    </enum>
    <enum name="DeviceType" cname="GdkDeviceType" gtype="gdk_device_type_get_type" type="enum">
      <member cname="GDK_DEVICE_TYPE_MASTER" name="Master" />
      <member cname="GDK_DEVICE_TYPE_SLAVE" name="Slave" />
      <member cname="GDK_DEVICE_TYPE_FLOATING" name="Floating" />
    </enum>
    <enum name="DragAction" cname="GdkDragAction" gtype="gdk_drag_action_get_type" type="flags">
      <member cname="GDK_ACTION_DEFAULT" name="Default" value="1 &lt;&lt; 0" />
      <member cname="GDK_ACTION_COPY" name="Copy" value="1 &lt;&lt; 1" />
      <member cname="GDK_ACTION_MOVE" name="Move" value="1 &lt;&lt; 2" />
      <member cname="GDK_ACTION_LINK" name="Link" value="1 &lt;&lt; 3" />
      <member cname="GDK_ACTION_PRIVATE" name="Private" value="1 &lt;&lt; 4" />
      <member cname="GDK_ACTION_ASK" name="Ask" value="1 &lt;&lt; 5" />
    </enum>
    <enum name="DragCancelReason" cname="GdkDragCancelReason" gtype="gdk_drag_cancel_reason_get_type" type="enum">
      <member cname="GDK_DRAG_CANCEL_NO_TARGET" name="NoTarget" />
      <member cname="GDK_DRAG_CANCEL_USER_CANCELLED" name="UserCancelled" />
      <member cname="GDK_DRAG_CANCEL_ERROR" name="Error" />
    </enum>
    <enum name="DragProtocol" cname="GdkDragProtocol" gtype="gdk_drag_protocol_get_type" type="enum">
      <member cname="GDK_DRAG_PROTO_NONE" name="None" />
      <member cname="GDK_DRAG_PROTO_MOTIF" name="Motif" />
      <member cname="GDK_DRAG_PROTO_XDND" name="Xdnd" />
      <member cname="GDK_DRAG_PROTO_ROOTWIN" name="Rootwin" />
      <member cname="GDK_DRAG_PROTO_WIN32_DROPFILES" name="Win32Dropfiles" />
      <member cname="GDK_DRAG_PROTO_OLE2" name="Ole2" />
      <member cname="GDK_DRAG_PROTO_LOCAL" name="Local" />
      <member cname="GDK_DRAG_PROTO_WAYLAND" name="Wayland" />
    </enum>
    <enum name="EventMask" cname="GdkEventMask" gtype="gdk_event_mask_get_type" type="flags">
      <member cname="GDK_EXPOSURE_MASK" name="ExposureMask" value="1 &lt;&lt; 1" />
      <member cname="GDK_POINTER_MOTION_MASK" name="PointerMotionMask" value="1 &lt;&lt; 2" />
      <member cname="GDK_POINTER_MOTION_HINT_MASK" name="PointerMotionHintMask" value="1 &lt;&lt; 3" />
      <member cname="GDK_BUTTON_MOTION_MASK" name="ButtonMotionMask" value="1 &lt;&lt; 4" />
      <member cname="GDK_BUTTON1_MOTION_MASK" name="Button1MotionMask" value="1 &lt;&lt; 5" />
      <member cname="GDK_BUTTON2_MOTION_MASK" name="Button2MotionMask" value="1 &lt;&lt; 6" />
      <member cname="GDK_BUTTON3_MOTION_MASK" name="Button3MotionMask" value="1 &lt;&lt; 7" />
      <member cname="GDK_BUTTON_PRESS_MASK" name="ButtonPressMask" value="1 &lt;&lt; 8" />
      <member cname="GDK_BUTTON_RELEASE_MASK" name="ButtonReleaseMask" value="1 &lt;&lt; 9" />
      <member cname="GDK_KEY_PRESS_MASK" name="KeyPressMask" value="1 &lt;&lt; 10" />
      <member cname="GDK_KEY_RELEASE_MASK" name="KeyReleaseMask" value="1 &lt;&lt; 11" />
      <member cname="GDK_ENTER_NOTIFY_MASK" name="EnterNotifyMask" value="1 &lt;&lt; 12" />
      <member cname="GDK_LEAVE_NOTIFY_MASK" name="LeaveNotifyMask" value="1 &lt;&lt; 13" />
      <member cname="GDK_FOCUS_CHANGE_MASK" name="FocusChangeMask" value="1 &lt;&lt; 14" />
      <member cname="GDK_STRUCTURE_MASK" name="StructureMask" value="1 &lt;&lt; 15" />
      <member cname="GDK_PROPERTY_CHANGE_MASK" name="PropertyChangeMask" value="1 &lt;&lt; 16" />
      <member cname="GDK_VISIBILITY_NOTIFY_MASK" name="VisibilityNotifyMask" value="1 &lt;&lt; 17" />
      <member cname="GDK_PROXIMITY_IN_MASK" name="ProximityInMask" value="1 &lt;&lt; 18" />
      <member cname="GDK_PROXIMITY_OUT_MASK" name="ProximityOutMask" value="1 &lt;&lt; 19" />
      <member cname="GDK_SUBSTRUCTURE_MASK" name="SubstructureMask" value="1 &lt;&lt; 20" />
      <member cname="GDK_SCROLL_MASK" name="ScrollMask" value="1 &lt;&lt; 21" />
      <member cname="GDK_TOUCH_MASK" name="TouchMask" value="1 &lt;&lt; 22" />
      <member cname="GDK_SMOOTH_SCROLL_MASK" name="SmoothScrollMask" value="1 &lt;&lt; 23" />
      <member cname="GDK_TOUCHPAD_GESTURE_MASK" name="TouchpadGestureMask" value="1 &lt;&lt; 24" />
      <member cname="GDK_TABLET_PAD_MASK" name="TabletPadMask" value="1 &lt;&lt; 25" />
      <member cname="GDK_ALL_EVENTS_MASK" name="AllEventsMask" value="0xFFFFFE" />
    </enum>
    <enum name="EventType" cname="GdkEventType" gtype="gdk_event_type_get_type" type="enum">
      <member cname="GDK_NOTHING" name="Nothing" value="-1" />
      <member cname="GDK_DELETE" name="Delete" />
      <member cname="GDK_DESTROY" name="Destroy" value="1" />
      <member cname="GDK_EXPOSE" name="Expose" value="2" />
      <member cname="GDK_MOTION_NOTIFY" name="MotionNotify" value="3" />
      <member cname="GDK_BUTTON_PRESS" name="ButtonPress" value="4" />
      <member cname="GDK_2BUTTON_PRESS" name="TwoButtonPress" value="5" />
      <member cname="GDK_DOUBLE_BUTTON_PRESS" name="DoubleButtonPress" value="TwoButtonPress" />
      <member cname="GDK_3BUTTON_PRESS" name="ThreeButtonPress" value="6" />
      <member cname="GDK_TRIPLE_BUTTON_PRESS" name="TripleButtonPress" value="ThreeButtonPress" />
      <member cname="GDK_BUTTON_RELEASE" name="ButtonRelease" value="7" />
      <member cname="GDK_KEY_PRESS" name="KeyPress" value="8" />
      <member cname="GDK_KEY_RELEASE" name="KeyRelease" value="9" />
      <member cname="GDK_ENTER_NOTIFY" name="EnterNotify" value="10" />
      <member cname="GDK_LEAVE_NOTIFY" name="LeaveNotify" value="11" />
      <member cname="GDK_FOCUS_CHANGE" name="FocusChange" value="12" />
      <member cname="GDK_CONFIGURE" name="Configure" value="13" />
      <member cname="GDK_MAP" name="Map" value="14" />
      <member cname="GDK_UNMAP" name="Unmap" value="15" />
      <member cname="GDK_PROPERTY_NOTIFY" name="PropertyNotify" value="16" />
      <member cname="GDK_SELECTION_CLEAR" name="SelectionClear" value="17" />
      <member cname="GDK_SELECTION_REQUEST" name="SelectionRequest" value="18" />
      <member cname="GDK_SELECTION_NOTIFY" name="SelectionNotify" value="19" />
      <member cname="GDK_PROXIMITY_IN" name="ProximityIn" value="20" />
      <member cname="GDK_PROXIMITY_OUT" name="ProximityOut" value="21" />
      <member cname="GDK_DRAG_ENTER" name="DragEnter" value="22" />
      <member cname="GDK_DRAG_LEAVE" name="DragLeave" value="23" />
      <member cname="GDK_DRAG_MOTION" name="DragMotion" value="24" />
      <member cname="GDK_DRAG_STATUS" name="DragStatus" value="25" />
      <member cname="GDK_DROP_START" name="DropStart" value="26" />
      <member cname="GDK_DROP_FINISHED" name="DropFinished" value="27" />
      <member cname="GDK_CLIENT_EVENT" name="ClientEvent" value="28" />
      <member cname="GDK_VISIBILITY_NOTIFY" name="VisibilityNotify" value="29" />
      <member cname="GDK_SCROLL" name="Scroll" value="31" />
      <member cname="GDK_WINDOW_STATE" name="WindowState" value="32" />
      <member cname="GDK_SETTING" name="Setting" value="33" />
      <member cname="GDK_OWNER_CHANGE" name="OwnerChange" value="34" />
      <member cname="GDK_GRAB_BROKEN" name="GrabBroken" value="35" />
      <member cname="GDK_DAMAGE" name="Damage" value="36" />
      <member cname="GDK_TOUCH_BEGIN" name="TouchBegin" value="37" />
      <member cname="GDK_TOUCH_UPDATE" name="TouchUpdate" value="38" />
      <member cname="GDK_TOUCH_END" name="TouchEnd" value="39" />
      <member cname="GDK_TOUCH_CANCEL" name="TouchCancel" value="40" />
      <member cname="GDK_TOUCHPAD_SWIPE" name="TouchpadSwipe" value="41" />
      <member cname="GDK_TOUCHPAD_PINCH" name="TouchpadPinch" value="42" />
      <member cname="GDK_PAD_BUTTON_PRESS" name="PadButtonPress" value="43" />
      <member cname="GDK_PAD_BUTTON_RELEASE" name="PadButtonRelease" value="44" />
      <member cname="GDK_PAD_RING" name="PadRing" value="45" />
      <member cname="GDK_PAD_STRIP" name="PadStrip" value="46" />
      <member cname="GDK_PAD_GROUP_MODE" name="PadGroupMode" value="47" />
      <member cname="GDK_EVENT_LAST" name="EventLast" />
    </enum>
    <enum name="FilterReturn" cname="GdkFilterReturn" gtype="gdk_filter_return_get_type" type="enum">
      <member cname="GDK_FILTER_CONTINUE" name="Continue" />
      <member cname="GDK_FILTER_TRANSLATE" name="Translate" />
      <member cname="GDK_FILTER_REMOVE" name="Remove" />
    </enum>
    <enum name="FrameClockPhase" cname="GdkFrameClockPhase" gtype="gdk_frame_clock_phase_get_type" type="flags">
      <member cname="GDK_FRAME_CLOCK_PHASE_NONE" name="None" />
      <member cname="GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS" name="FlushEvents" value="1 &lt;&lt; 0" />
      <member cname="GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT" name="BeforePaint" value="1 &lt;&lt; 1" />
      <member cname="GDK_FRAME_CLOCK_PHASE_UPDATE" name="Update" value="1 &lt;&lt; 2" />
      <member cname="GDK_FRAME_CLOCK_PHASE_LAYOUT" name="Layout" value="1 &lt;&lt; 3" />
      <member cname="GDK_FRAME_CLOCK_PHASE_PAINT" name="Paint" value="1 &lt;&lt; 4" />
      <member cname="GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS" name="ResumeEvents" value="1 &lt;&lt; 5" />
      <member cname="GDK_FRAME_CLOCK_PHASE_AFTER_PAINT" name="AfterPaint" value="1 &lt;&lt; 6" />
    </enum>
    <enum name="FullscreenMode" cname="GdkFullscreenMode" gtype="gdk_fullscreen_mode_get_type" type="enum">
      <member cname="GDK_FULLSCREEN_ON_CURRENT_MONITOR" name="CurrentMonitor" />
      <member cname="GDK_FULLSCREEN_ON_ALL_MONITORS" name="AllMonitors" />
    </enum>
    <enum name="GLError" cname="GdkGLError" type="enum">
      <member cname="GDK_GL_ERROR_NOT_AVAILABLE" name="NotAvailable" />
      <member cname="GDK_GL_ERROR_UNSUPPORTED_FORMAT" name="UnsupportedFormat" />
      <member cname="GDK_GL_ERROR_UNSUPPORTED_PROFILE" name="UnsupportedProfile" />
    </enum>
    <enum name="GrabOwnership" cname="GdkGrabOwnership" gtype="gdk_grab_ownership_get_type" type="enum">
      <member cname="GDK_OWNERSHIP_NONE" name="None" />
      <member cname="GDK_OWNERSHIP_WINDOW" name="Window" />
      <member cname="GDK_OWNERSHIP_APPLICATION" name="Application" />
    </enum>
    <enum name="GrabStatus" cname="GdkGrabStatus" gtype="gdk_grab_status_get_type" type="enum">
      <member cname="GDK_GRAB_SUCCESS" name="Success" />
      <member cname="GDK_GRAB_ALREADY_GRABBED" name="AlreadyGrabbed" value="1" />
      <member cname="GDK_GRAB_INVALID_TIME" name="InvalidTime" value="2" />
      <member cname="GDK_GRAB_NOT_VIEWABLE" name="NotViewable" value="3" />
      <member cname="GDK_GRAB_FROZEN" name="Frozen" value="4" />
      <member cname="GDK_GRAB_FAILED" name="Failed" value="5" />
    </enum>
    <enum name="Gravity" cname="GdkGravity" gtype="gdk_gravity_get_type" type="enum">
      <member cname="GDK_GRAVITY_NORTH_WEST" name="NorthWest" value="1" />
      <member cname="GDK_GRAVITY_NORTH" name="North" />
      <member cname="GDK_GRAVITY_NORTH_EAST" name="NorthEast" />
      <member cname="GDK_GRAVITY_WEST" name="West" />
      <member cname="GDK_GRAVITY_CENTER" name="Center" />
      <member cname="GDK_GRAVITY_EAST" name="East" />
      <member cname="GDK_GRAVITY_SOUTH_WEST" name="SouthWest" />
      <member cname="GDK_GRAVITY_SOUTH" name="South" />
      <member cname="GDK_GRAVITY_SOUTH_EAST" name="SouthEast" />
      <member cname="GDK_GRAVITY_STATIC" name="Static" />
    </enum>
    <enum name="InputMode" cname="GdkInputMode" gtype="gdk_input_mode_get_type" type="enum">
      <member cname="GDK_MODE_DISABLED" name="Disabled" />
      <member cname="GDK_MODE_SCREEN" name="Screen" />
      <member cname="GDK_MODE_WINDOW" name="Window" />
    </enum>
    <enum name="InputSource" cname="GdkInputSource" gtype="gdk_input_source_get_type" type="enum">
      <member cname="GDK_SOURCE_MOUSE" name="Mouse" />
      <member cname="GDK_SOURCE_PEN" name="Pen" />
      <member cname="GDK_SOURCE_ERASER" name="Eraser" />
      <member cname="GDK_SOURCE_CURSOR" name="Cursor" />
      <member cname="GDK_SOURCE_KEYBOARD" name="Keyboard" />
      <member cname="GDK_SOURCE_TOUCHSCREEN" name="Touchscreen" />
      <member cname="GDK_SOURCE_TOUCHPAD" name="Touchpad" />
      <member cname="GDK_SOURCE_TRACKPOINT" name="Trackpoint" />
      <member cname="GDK_SOURCE_TABLET_PAD" name="TabletPad" />
    </enum>
    <enum name="ModifierIntent" cname="GdkModifierIntent" gtype="gdk_modifier_intent_get_type" type="enum">
      <member cname="GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR" name="PrimaryAccelerator" />
      <member cname="GDK_MODIFIER_INTENT_CONTEXT_MENU" name="ContextMenu" />
      <member cname="GDK_MODIFIER_INTENT_EXTEND_SELECTION" name="ExtendSelection" />
      <member cname="GDK_MODIFIER_INTENT_MODIFY_SELECTION" name="ModifySelection" />
      <member cname="GDK_MODIFIER_INTENT_NO_TEXT_INPUT" name="NoTextInput" />
      <member cname="GDK_MODIFIER_INTENT_SHIFT_GROUP" name="ShiftGroup" />
      <member cname="GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK" name="DefaultModMask" />
    </enum>
    <enum name="ModifierType" cname="GdkModifierType" gtype="gdk_modifier_type_get_type" type="flags">
      <member cname="GDK_SHIFT_MASK" name="ShiftMask" value="1 &lt;&lt; 0" />
      <member cname="GDK_LOCK_MASK" name="LockMask" value="1 &lt;&lt; 1" />
      <member cname="GDK_CONTROL_MASK" name="ControlMask" value="1 &lt;&lt; 2" />
      <member cname="GDK_MOD1_MASK" name="Mod1Mask" value="1 &lt;&lt; 3" />
      <member cname="GDK_MOD2_MASK" name="Mod2Mask" value="1 &lt;&lt; 4" />
      <member cname="GDK_MOD3_MASK" name="Mod3Mask" value="1 &lt;&lt; 5" />
      <member cname="GDK_MOD4_MASK" name="Mod4Mask" value="1 &lt;&lt; 6" />
      <member cname="GDK_MOD5_MASK" name="Mod5Mask" value="1 &lt;&lt; 7" />
      <member cname="GDK_BUTTON1_MASK" name="Button1Mask" value="1 &lt;&lt; 8" />
      <member cname="GDK_BUTTON2_MASK" name="Button2Mask" value="1 &lt;&lt; 9" />
      <member cname="GDK_BUTTON3_MASK" name="Button3Mask" value="1 &lt;&lt; 10" />
      <member cname="GDK_BUTTON4_MASK" name="Button4Mask" value="1 &lt;&lt; 11" />
      <member cname="GDK_BUTTON5_MASK" name="Button5Mask" value="1 &lt;&lt; 12" />
      <member cname="GDK_MODIFIER_RESERVED_13_MASK" name="ModifierReserved13Mask" value="1 &lt;&lt; 13" />
      <member cname="GDK_MODIFIER_RESERVED_14_MASK" name="ModifierReserved14Mask" value="1 &lt;&lt; 14" />
      <member cname="GDK_MODIFIER_RESERVED_15_MASK" name="ModifierReserved15Mask" value="1 &lt;&lt; 15" />
      <member cname="GDK_MODIFIER_RESERVED_16_MASK" name="ModifierReserved16Mask" value="1 &lt;&lt; 16" />
      <member cname="GDK_MODIFIER_RESERVED_17_MASK" name="ModifierReserved17Mask" value="1 &lt;&lt; 17" />
      <member cname="GDK_MODIFIER_RESERVED_18_MASK" name="ModifierReserved18Mask" value="1 &lt;&lt; 18" />
      <member cname="GDK_MODIFIER_RESERVED_19_MASK" name="ModifierReserved19Mask" value="1 &lt;&lt; 19" />
      <member cname="GDK_MODIFIER_RESERVED_20_MASK" name="ModifierReserved20Mask" value="1 &lt;&lt; 20" />
      <member cname="GDK_MODIFIER_RESERVED_21_MASK" name="ModifierReserved21Mask" value="1 &lt;&lt; 21" />
      <member cname="GDK_MODIFIER_RESERVED_22_MASK" name="ModifierReserved22Mask" value="1 &lt;&lt; 22" />
      <member cname="GDK_MODIFIER_RESERVED_23_MASK" name="ModifierReserved23Mask" value="1 &lt;&lt; 23" />
      <member cname="GDK_MODIFIER_RESERVED_24_MASK" name="ModifierReserved24Mask" value="1 &lt;&lt; 24" />
      <member cname="GDK_MODIFIER_RESERVED_25_MASK" name="ModifierReserved25Mask" value="1 &lt;&lt; 25" />
      <member cname="GDK_SUPER_MASK" name="SuperMask" value="1 &lt;&lt; 26" />
      <member cname="GDK_HYPER_MASK" name="HyperMask" value="1 &lt;&lt; 27" />
      <member cname="GDK_META_MASK" name="MetaMask" value="1 &lt;&lt; 28" />
      <member cname="GDK_MODIFIER_RESERVED_29_MASK" name="ModifierReserved29Mask" value="1 &lt;&lt; 29" />
      <member cname="GDK_RELEASE_MASK" name="ReleaseMask" value="1 &lt;&lt; 30" />
      <member cname="GDK_MODIFIER_MASK" name="ModifierMask" value="0x5c001fff" />
    </enum>
    <enum name="NotifyType" cname="GdkNotifyType" gtype="gdk_notify_type_get_type" type="enum">
      <member cname="GDK_NOTIFY_ANCESTOR" name="Ancestor" />
      <member cname="GDK_NOTIFY_VIRTUAL" name="Virtual" value="1" />
      <member cname="GDK_NOTIFY_INFERIOR" name="Inferior" value="2" />
      <member cname="GDK_NOTIFY_NONLINEAR" name="Nonlinear" value="3" />
      <member cname="GDK_NOTIFY_NONLINEAR_VIRTUAL" name="NonlinearVirtual" value="4" />
      <member cname="GDK_NOTIFY_UNKNOWN" name="Unknown" value="5" />
    </enum>
    <enum name="OwnerChange" cname="GdkOwnerChange" gtype="gdk_owner_change_get_type" type="enum">
      <member cname="GDK_OWNER_CHANGE_NEW_OWNER" name="NewOwner" />
      <member cname="GDK_OWNER_CHANGE_DESTROY" name="Destroy" />
      <member cname="GDK_OWNER_CHANGE_CLOSE" name="Close" />
    </enum>
    <enum name="PropMode" cname="GdkPropMode" gtype="gdk_prop_mode_get_type" type="enum">
      <member cname="GDK_PROP_MODE_REPLACE" name="Replace" />
      <member cname="GDK_PROP_MODE_PREPEND" name="Prepend" />
      <member cname="GDK_PROP_MODE_APPEND" name="Append" />
    </enum>
    <enum name="PropertyState" cname="GdkPropertyState" gtype="gdk_property_state_get_type" type="enum">
      <member cname="GDK_PROPERTY_NEW_VALUE" name="NewValue" />
      <member cname="GDK_PROPERTY_DELETE" name="Delete" />
    </enum>
    <enum name="ScrollDirection" cname="GdkScrollDirection" gtype="gdk_scroll_direction_get_type" type="enum">
      <member cname="GDK_SCROLL_UP" name="Up" />
      <member cname="GDK_SCROLL_DOWN" name="Down" />
      <member cname="GDK_SCROLL_LEFT" name="Left" />
      <member cname="GDK_SCROLL_RIGHT" name="Right" />
      <member cname="GDK_SCROLL_SMOOTH" name="Smooth" />
    </enum>
    <enum name="SeatCapabilities" cname="GdkSeatCapabilities" gtype="gdk_seat_capabilities_get_type" type="flags">
      <member cname="GDK_SEAT_CAPABILITY_NONE" name="None" />
      <member cname="GDK_SEAT_CAPABILITY_POINTER" name="Pointer" value="1 &lt;&lt; 0" />
      <member cname="GDK_SEAT_CAPABILITY_TOUCH" name="Touch" value="1 &lt;&lt; 1" />
      <member cname="GDK_SEAT_CAPABILITY_TABLET_STYLUS" name="TabletStylus" value="1 &lt;&lt; 2" />
      <member cname="GDK_SEAT_CAPABILITY_KEYBOARD" name="Keyboard" value="1 &lt;&lt; 3" />
      <member cname="GDK_SEAT_CAPABILITY_ALL_POINTING" name="AllPointing" value="GDK_SEAT_CAPABILITY_POINTER | GDK_SEAT_CAPABILITY_TOUCH | GDK_SEAT_CAPABILITY_TABLET_STYLUS" />
      <member cname="GDK_SEAT_CAPABILITY_ALL" name="All" value="GDK_SEAT_CAPABILITY_ALL_POINTING | GDK_SEAT_CAPABILITY_KEYBOARD" />
    </enum>
    <enum name="SettingAction" cname="GdkSettingAction" gtype="gdk_setting_action_get_type" type="enum">
      <member cname="GDK_SETTING_ACTION_NEW" name="New" />
      <member cname="GDK_SETTING_ACTION_CHANGED" name="Changed" />
      <member cname="GDK_SETTING_ACTION_DELETED" name="Deleted" />
    </enum>
    <enum name="Status" cname="GdkStatus" gtype="gdk_status_get_type" type="enum">
      <member cname="GDK_OK" name="Ok" />
      <member cname="GDK_ERROR" name="Error" value="-1" />
      <member cname="GDK_ERROR_PARAM" name="ErrorParam" value="-2" />
      <member cname="GDK_ERROR_FILE" name="ErrorFile" value="-3" />
      <member cname="GDK_ERROR_MEM" name="ErrorMem" value="-4" />
    </enum>
    <enum name="SubpixelLayout" cname="GdkSubpixelLayout" gtype="gdk_subpixel_layout_get_type" type="enum">
      <member cname="GDK_SUBPIXEL_LAYOUT_UNKNOWN" name="Unknown" />
      <member cname="GDK_SUBPIXEL_LAYOUT_NONE" name="None" />
      <member cname="GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB" name="HorizontalRgb" />
      <member cname="GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR" name="HorizontalBgr" />
      <member cname="GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB" name="VerticalRgb" />
      <member cname="GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR" name="VerticalBgr" />
    </enum>
    <enum name="TouchpadGesturePhase" cname="GdkTouchpadGesturePhase" gtype="gdk_touchpad_gesture_phase_get_type" type="enum">
      <member cname="GDK_TOUCHPAD_GESTURE_PHASE_BEGIN" name="Begin" />
      <member cname="GDK_TOUCHPAD_GESTURE_PHASE_UPDATE" name="Update" />
      <member cname="GDK_TOUCHPAD_GESTURE_PHASE_END" name="End" />
      <member cname="GDK_TOUCHPAD_GESTURE_PHASE_CANCEL" name="Cancel" />
    </enum>
    <enum name="VisibilityState" cname="GdkVisibilityState" gtype="gdk_visibility_state_get_type" type="enum">
      <member cname="GDK_VISIBILITY_UNOBSCURED" name="Unobscured" />
      <member cname="GDK_VISIBILITY_PARTIAL" name="Partial" />
      <member cname="GDK_VISIBILITY_FULLY_OBSCURED" name="FullyObscured" />
    </enum>
    <enum name="VisualType" cname="GdkVisualType" gtype="gdk_visual_type_get_type" type="enum">
      <member cname="GDK_VISUAL_STATIC_GRAY" name="StaticGray" />
      <member cname="GDK_VISUAL_GRAYSCALE" name="Grayscale" />
      <member cname="GDK_VISUAL_STATIC_COLOR" name="StaticColor" />
      <member cname="GDK_VISUAL_PSEUDO_COLOR" name="PseudoColor" />
      <member cname="GDK_VISUAL_TRUE_COLOR" name="TrueColor" />
      <member cname="GDK_VISUAL_DIRECT_COLOR" name="DirectColor" />
    </enum>
    <enum name="WMDecoration" cname="GdkWMDecoration" type="flags">
      <member cname="GDK_DECOR_ALL" name="All" value="1 &lt;&lt; 0" />
      <member cname="GDK_DECOR_BORDER" name="Border" value="1 &lt;&lt; 1" />
      <member cname="GDK_DECOR_RESIZEH" name="Resizeh" value="1 &lt;&lt; 2" />
      <member cname="GDK_DECOR_TITLE" name="Title" value="1 &lt;&lt; 3" />
      <member cname="GDK_DECOR_MENU" name="Menu" value="1 &lt;&lt; 4" />
      <member cname="GDK_DECOR_MINIMIZE" name="Minimize" value="1 &lt;&lt; 5" />
      <member cname="GDK_DECOR_MAXIMIZE" name="Maximize" value="1 &lt;&lt; 6" />
    </enum>
    <enum name="WMFunction" cname="GdkWMFunction" type="flags">
      <member cname="GDK_FUNC_ALL" name="All" value="1 &lt;&lt; 0" />
      <member cname="GDK_FUNC_RESIZE" name="Resize" value="1 &lt;&lt; 1" />
      <member cname="GDK_FUNC_MOVE" name="Move" value="1 &lt;&lt; 2" />
      <member cname="GDK_FUNC_MINIMIZE" name="Minimize" value="1 &lt;&lt; 3" />
      <member cname="GDK_FUNC_MAXIMIZE" name="Maximize" value="1 &lt;&lt; 4" />
      <member cname="GDK_FUNC_CLOSE" name="Close" value="1 &lt;&lt; 5" />
    </enum>
    <enum name="WindowAttributesType" cname="GdkWindowAttributesType" gtype="gdk_window_attributes_type_get_type" type="flags">
      <member cname="GDK_WA_TITLE" name="Title" value="1 &lt;&lt; 1" />
      <member cname="GDK_WA_X" name="X" value="1 &lt;&lt; 2" />
      <member cname="GDK_WA_Y" name="Y" value="1 &lt;&lt; 3" />
      <member cname="GDK_WA_CURSOR" name="Cursor" value="1 &lt;&lt; 4" />
      <member cname="GDK_WA_VISUAL" name="Visual" value="1 &lt;&lt; 5" />
      <member cname="GDK_WA_WMCLASS" name="Wmclass" value="1 &lt;&lt; 6" />
      <member cname="GDK_WA_NOREDIR" name="Noredir" value="1 &lt;&lt; 7" />
      <member cname="GDK_WA_TYPE_HINT" name="TypeHint" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="WindowEdge" cname="GdkWindowEdge" gtype="gdk_window_edge_get_type" type="enum">
      <member cname="GDK_WINDOW_EDGE_NORTH_WEST" name="NorthWest" />
      <member cname="GDK_WINDOW_EDGE_NORTH" name="North" />
      <member cname="GDK_WINDOW_EDGE_NORTH_EAST" name="NorthEast" />
      <member cname="GDK_WINDOW_EDGE_WEST" name="West" />
      <member cname="GDK_WINDOW_EDGE_EAST" name="East" />
      <member cname="GDK_WINDOW_EDGE_SOUTH_WEST" name="SouthWest" />
      <member cname="GDK_WINDOW_EDGE_SOUTH" name="South" />
      <member cname="GDK_WINDOW_EDGE_SOUTH_EAST" name="SouthEast" />
    </enum>
    <enum name="WindowHints" cname="GdkWindowHints" gtype="gdk_window_hints_get_type" type="flags">
      <member cname="GDK_HINT_POS" name="Pos" value="1 &lt;&lt; 0" />
      <member cname="GDK_HINT_MIN_SIZE" name="MinSize" value="1 &lt;&lt; 1" />
      <member cname="GDK_HINT_MAX_SIZE" name="MaxSize" value="1 &lt;&lt; 2" />
      <member cname="GDK_HINT_BASE_SIZE" name="BaseSize" value="1 &lt;&lt; 3" />
      <member cname="GDK_HINT_ASPECT" name="Aspect" value="1 &lt;&lt; 4" />
      <member cname="GDK_HINT_RESIZE_INC" name="ResizeInc" value="1 &lt;&lt; 5" />
      <member cname="GDK_HINT_WIN_GRAVITY" name="WinGravity" value="1 &lt;&lt; 6" />
      <member cname="GDK_HINT_USER_POS" name="UserPos" value="1 &lt;&lt; 7" />
      <member cname="GDK_HINT_USER_SIZE" name="UserSize" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="WindowState" cname="GdkWindowState" gtype="gdk_window_state_get_type" type="flags">
      <member cname="GDK_WINDOW_STATE_WITHDRAWN" name="Withdrawn" value="1 &lt;&lt; 0" />
      <member cname="GDK_WINDOW_STATE_ICONIFIED" name="Iconified" value="1 &lt;&lt; 1" />
      <member cname="GDK_WINDOW_STATE_MAXIMIZED" name="Maximized" value="1 &lt;&lt; 2" />
      <member cname="GDK_WINDOW_STATE_STICKY" name="Sticky" value="1 &lt;&lt; 3" />
      <member cname="GDK_WINDOW_STATE_FULLSCREEN" name="Fullscreen" value="1 &lt;&lt; 4" />
      <member cname="GDK_WINDOW_STATE_ABOVE" name="Above" value="1 &lt;&lt; 5" />
      <member cname="GDK_WINDOW_STATE_BELOW" name="Below" value="1 &lt;&lt; 6" />
      <member cname="GDK_WINDOW_STATE_FOCUSED" name="Focused" value="1 &lt;&lt; 7" />
      <member cname="GDK_WINDOW_STATE_TILED" name="Tiled" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="WindowType" cname="GdkWindowType" gtype="gdk_window_type_get_type" type="enum">
      <member cname="GDK_WINDOW_ROOT" name="Root" />
      <member cname="GDK_WINDOW_TOPLEVEL" name="Toplevel" />
      <member cname="GDK_WINDOW_CHILD" name="Child" />
      <member cname="GDK_WINDOW_TEMP" name="Temp" />
      <member cname="GDK_WINDOW_FOREIGN" name="Foreign" />
      <member cname="GDK_WINDOW_OFFSCREEN" name="Offscreen" />
      <member cname="GDK_WINDOW_SUBSURFACE" name="Subsurface" />
    </enum>
    <enum name="WindowTypeHint" cname="GdkWindowTypeHint" gtype="gdk_window_type_hint_get_type" type="enum">
      <member cname="GDK_WINDOW_TYPE_HINT_NORMAL" name="Normal" />
      <member cname="GDK_WINDOW_TYPE_HINT_DIALOG" name="Dialog" />
      <member cname="GDK_WINDOW_TYPE_HINT_MENU" name="Menu" />
      <member cname="GDK_WINDOW_TYPE_HINT_TOOLBAR" name="Toolbar" />
      <member cname="GDK_WINDOW_TYPE_HINT_SPLASHSCREEN" name="Splashscreen" />
      <member cname="GDK_WINDOW_TYPE_HINT_UTILITY" name="Utility" />
      <member cname="GDK_WINDOW_TYPE_HINT_DOCK" name="Dock" />
      <member cname="GDK_WINDOW_TYPE_HINT_DESKTOP" name="Desktop" />
      <member cname="GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU" name="DropdownMenu" />
      <member cname="GDK_WINDOW_TYPE_HINT_POPUP_MENU" name="PopupMenu" />
      <member cname="GDK_WINDOW_TYPE_HINT_TOOLTIP" name="Tooltip" />
      <member cname="GDK_WINDOW_TYPE_HINT_NOTIFICATION" name="Notification" />
      <member cname="GDK_WINDOW_TYPE_HINT_COMBO" name="Combo" />
      <member cname="GDK_WINDOW_TYPE_HINT_DND" name="Dnd" />
    </enum>
    <enum name="WindowWindowClass" cname="GdkWindowWindowClass" gtype="gdk_window_window_class_get_type" type="enum">
      <member cname="GDK_INPUT_OUTPUT" name="Output" />
      <member cname="GDK_INPUT_ONLY" name="Only" />
    </enum>
    <callback name="EventFunc" cname="GdkEventFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkEvent*" name="event" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FilterFunc" cname="GdkFilterFunc">
      <return-type type="GdkFilterReturn" />
      <parameters>
        <parameter type="GdkXEvent*" name="xevent" />
        <parameter type="GdkEvent*" name="event" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="SeatGrabPrepareFunc" cname="GdkSeatGrabPrepareFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkSeat*" name="seat" />
        <parameter type="GdkWindow*" name="window" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="WindowChildFunc" cname="GdkWindowChildFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GdkWindow*" name="window" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="WindowInvalidateHandlerFunc" cname="GdkWindowInvalidateHandlerFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkWindow*" name="window" />
        <parameter type="cairo_region_t*" name="region" />
      </parameters>
    </callback>
    <interface name="DevicePad" cname="GdkDevicePad">
      <class_struct cname="GdkDevicePadInterface">
        <field name="ParentInterface" cname="parent_interface" type="GTypeInterface" />
        <method vm="get_n_groups" />
        <method vm="get_group_n_modes" />
        <method vm="get_n_features" />
        <method vm="get_feature_group" />
      </class_struct>
      <virtual_method name="GetNGroups" cname="get_n_groups">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetGroupNModes" cname="get_group_n_modes">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="group" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNFeatures" cname="get_n_features">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDevicePadFeature" name="feature" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFeatureGroup" cname="get_feature_group">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDevicePadFeature" name="feature" />
          <parameter type="gint" name="idx" />
        </parameters>
      </virtual_method>
      <method name="GetFeatureGroup" cname="gdk_device_pad_get_feature_group">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDevicePadFeature" name="feature" />
          <parameter type="gint" name="feature_idx" />
        </parameters>
      </method>
      <method name="GetGroupNModes" cname="gdk_device_pad_get_group_n_modes">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="group_idx" />
        </parameters>
      </method>
      <method name="GetNFeatures" cname="gdk_device_pad_get_n_features">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDevicePadFeature" name="feature" />
        </parameters>
      </method>
      <method name="GetNGroups" cname="gdk_device_pad_get_n_groups">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gdk_device_pad_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <object name="AppLaunchContext" cname="GdkAppLaunchContext" parent="GAppLaunchContext">
      <property name="Display" cname="display" type="GdkDisplay" readable="true" writeable="true" construct-only="true" />
      <method name="GetType" cname="gdk_app_launch_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_app_launch_context_new" deprecated="1" />
      <method name="SetDesktop" cname="gdk_app_launch_context_set_desktop">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="desktop" />
        </parameters>
      </method>
      <method name="SetDisplay" cname="gdk_app_launch_context_set_display" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
        </parameters>
      </method>
      <method name="SetIcon" cname="gdk_app_launch_context_set_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="GIcon*" name="icon" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gdk_app_launch_context_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gdk_app_launch_context_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetTimestamp" cname="gdk_app_launch_context_set_timestamp">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
    </object>
    <object name="Cursor" cname="GdkCursor" parent="GObject">
      <class_struct cname="GdkCursorClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="get_surface" />
      </class_struct>
      <property name="CursorType" cname="cursor-type" type="GdkCursorType" readable="true" writeable="true" construct-only="true" />
      <property name="Display" cname="display" type="GdkDisplay" readable="true" writeable="true" construct-only="true" />
      <virtual_method name="GetSurface" cname="get_surface">
        <return-type type="cairo_surface_t*" />
        <parameters>
          <parameter type="gdouble*" name="x_hot" />
          <parameter type="gdouble*" name="y_hot" />
        </parameters>
      </virtual_method>
      <method name="GetCursorType" cname="gdk_cursor_get_cursor_type">
        <return-type type="GdkCursorType" />
      </method>
      <method name="GetDisplay" cname="gdk_cursor_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetImage" cname="gdk_cursor_get_image">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetSurface" cname="gdk_cursor_get_surface">
        <return-type type="cairo_surface_t*" />
        <parameters>
          <parameter type="gdouble*" name="x_hot" />
          <parameter type="gdouble*" name="y_hot" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_cursor_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_cursor_new" deprecated="1">
        <parameters>
          <parameter type="GdkCursorType" name="cursor_type" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_for_display">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkCursorType" name="cursor_type" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_from_name">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_from_pixbuf">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_from_surface">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="cairo_surface_t*" name="surface" />
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gdk_cursor_ref" deprecated="1">
        <return-type type="GdkCursor*" />
      </method>
      <method name="Unref" cname="gdk_cursor_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Device" cname="GdkDevice" parent="GObject">
      <class_struct cname="GdkDeviceClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="get_history" />
        <method vm="get_state" />
        <method vm="set_window_cursor" />
        <method vm="warp" />
        <method vm="query_state" />
        <method vm="grab" />
        <method vm="ungrab" />
        <method vm="window_at_position" />
        <method vm="select_window_events" />
      </class_struct>
      <property name="Display" cname="display" type="GdkDisplay" readable="true" writeable="true" construct-only="true" />
      <property name="DeviceManager" cname="device-manager" type="GdkDeviceManager" readable="true" writeable="true" construct-only="true" />
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="Type" cname="type" type="GdkDeviceType" readable="true" writeable="true" construct-only="true" />
      <property name="AssociatedDevice" cname="associated-device" type="GdkDevice" readable="true" />
      <property name="InputSource" cname="input-source" type="GdkInputSource" readable="true" writeable="true" construct-only="true" />
      <property name="InputMode" cname="input-mode" type="GdkInputMode" readable="true" writeable="true" />
      <property name="HasCursor" cname="has-cursor" type="gboolean" readable="true" writeable="true" construct-only="true" />
      <property name="NAxes" cname="n-axes" type="guint" readable="true" />
      <property name="VendorId" cname="vendor-id" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="ProductId" cname="product-id" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="Seat" cname="seat" type="GdkSeat" readable="true" writeable="true" />
      <property name="NumTouches" cname="num-touches" type="guint" readable="true" writeable="true" construct-only="true" />
      <property name="Axes" cname="axes" type="GdkAxisFlags" readable="true" />
      <property name="Tool" cname="tool" type="GdkDeviceTool" readable="true" />
      <signal name="Changed" cname="changed" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="ToolChanged" cname="tool-changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="p0" type="GdkDeviceTool" />
        </parameters>
      </signal>
      <virtual_method name="GetHistory" cname="get_history">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="guint32" name="start" />
          <parameter type="guint32" name="stop" />
          <parameter type="GdkTimeCoord***" name="events" />
          <parameter type="gint*" name="n_events" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetState" cname="get_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gdouble*" name="axes" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetWindowCursor" cname="set_window_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkCursor*" name="cursor" />
        </parameters>
      </virtual_method>
      <virtual_method name="Warp" cname="warp">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </virtual_method>
      <virtual_method name="QueryState" cname="query_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkWindow**" name="root_window" />
          <parameter type="GdkWindow**" name="child_window" />
          <parameter type="gdouble*" name="root_x" />
          <parameter type="gdouble*" name="root_y" />
          <parameter type="gdouble*" name="win_x" />
          <parameter type="gdouble*" name="win_y" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </virtual_method>
      <virtual_method name="Grab" cname="grab">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="GdkEventMask" name="event_mask" />
          <parameter type="GdkWindow*" name="confine_to" />
          <parameter type="GdkCursor*" name="cursor" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="Ungrab" cname="ungrab">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="WindowAtPosition" cname="window_at_position">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="double*" name="win_x" />
          <parameter type="double*" name="win_y" />
          <parameter type="GdkModifierType*" name="mask" />
          <parameter type="gboolean" name="get_toplevel" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectWindowEvents" cname="select_window_events">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkEventMask" name="event_mask" />
        </parameters>
      </virtual_method>
      <method name="FreeHistory" cname="gdk_device_free_history" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkTimeCoord**" name="events" />
          <parameter type="gint" name="n_events" />
        </parameters>
      </method>
      <method name="GetAssociatedDevice" cname="gdk_device_get_associated_device">
        <return-type type="GdkDevice*" />
      </method>
      <method name="GetAxes" cname="gdk_device_get_axes">
        <return-type type="GdkAxisFlags" />
      </method>
      <method name="GetAxis" cname="gdk_device_get_axis">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gdouble*" name="axes" />
          <parameter type="GdkAxisUse" name="use" />
          <parameter type="gdouble*" name="value" />
        </parameters>
      </method>
      <method name="GetAxisUse" cname="gdk_device_get_axis_use">
        <return-type type="GdkAxisUse" />
        <parameters>
          <parameter type="guint" name="index_" />
        </parameters>
      </method>
      <method name="GetAxisValue" cname="gdk_device_get_axis_value">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gdouble*" name="axes" />
          <parameter type="GdkAtom" name="axis_label" />
          <parameter type="gdouble*" name="value" />
        </parameters>
      </method>
      <method name="GetDeviceType" cname="gdk_device_get_device_type">
        <return-type type="GdkDeviceType" />
      </method>
      <method name="GetDisplay" cname="gdk_device_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetHasCursor" cname="gdk_device_get_has_cursor">
        <return-type type="gboolean" />
      </method>
      <method name="GetHistory" cname="gdk_device_get_history">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="guint32" name="start" />
          <parameter type="guint32" name="stop" />
          <parameter type="GdkTimeCoord***" name="events" />
          <parameter type="gint*" name="n_events" />
        </parameters>
      </method>
      <method name="GetKey" cname="gdk_device_get_key">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="index_" />
          <parameter type="guint*" name="keyval" />
          <parameter type="GdkModifierType*" name="modifiers" />
        </parameters>
      </method>
      <method name="GetLastEventWindow" cname="gdk_device_get_last_event_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetMode" cname="gdk_device_get_mode">
        <return-type type="GdkInputMode" />
      </method>
      <method name="GetNAxes" cname="gdk_device_get_n_axes">
        <return-type type="gint" />
      </method>
      <method name="GetNKeys" cname="gdk_device_get_n_keys">
        <return-type type="gint" />
      </method>
      <method name="GetName" cname="gdk_device_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPosition" cname="gdk_device_get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen**" name="screen" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetPositionDouble" cname="gdk_device_get_position_double">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen**" name="screen" />
          <parameter type="gdouble*" name="x" />
          <parameter type="gdouble*" name="y" />
        </parameters>
      </method>
      <method name="GetProductId" cname="gdk_device_get_product_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSeat" cname="gdk_device_get_seat">
        <return-type type="GdkSeat*" />
      </method>
      <method name="GetSource" cname="gdk_device_get_source">
        <return-type type="GdkInputSource" />
      </method>
      <method name="GetState" cname="gdk_device_get_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gdouble*" name="axes" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_device_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVendorId" cname="gdk_device_get_vendor_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetWindowAtPosition" cname="gdk_device_get_window_at_position">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gint*" name="win_x" />
          <parameter type="gint*" name="win_y" />
        </parameters>
      </method>
      <method name="GetWindowAtPositionDouble" cname="gdk_device_get_window_at_position_double">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gdouble*" name="win_x" />
          <parameter type="gdouble*" name="win_y" />
        </parameters>
      </method>
      <method name="Grab" cname="gdk_device_grab" deprecated="1">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkGrabOwnership" name="grab_ownership" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="GdkEventMask" name="event_mask" />
          <parameter type="GdkCursor*" name="cursor" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GrabInfoLibgtkOnly" cname="gdk_device_grab_info_libgtk_only" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkDevice*" name="device" />
          <parameter type="GdkWindow**" name="grab_window" />
          <parameter type="gboolean*" name="owner_events" />
        </parameters>
      </method>
      <method name="ListAxes" cname="gdk_device_list_axes">
        <return-type type="GList*" />
      </method>
      <method name="ListSlaveDevices" cname="gdk_device_list_slave_devices">
        <return-type type="GList*" />
      </method>
      <method name="SetAxisUse" cname="gdk_device_set_axis_use">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
          <parameter type="GdkAxisUse" name="use" />
        </parameters>
      </method>
      <method name="SetKey" cname="gdk_device_set_key">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="SetMode" cname="gdk_device_set_mode">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkInputMode" name="mode" />
        </parameters>
      </method>
      <method name="Ungrab" cname="gdk_device_ungrab" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Warp" cname="gdk_device_warp">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
    </object>
    <object name="DeviceManager" cname="GdkDeviceManager" parent="GObject">
      <class_struct cname="GdkDeviceManagerClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method signal_vm="device_added" />
        <method signal_vm="device_removed" />
        <method signal_vm="device_changed" />
        <method vm="list_devices" />
        <method vm="get_client_pointer" />
      </class_struct>
      <property name="Display" cname="display" type="GdkDisplay" readable="true" writeable="true" construct-only="true" />
      <signal name="DeviceAdded" cname="device-added" when="LAST" field_name="device_added">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </signal>
      <signal name="DeviceRemoved" cname="device-removed" when="LAST" field_name="device_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </signal>
      <signal name="DeviceChanged" cname="device-changed" when="LAST" field_name="device_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </signal>
      <virtual_method name="ListDevices" cname="list_devices">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GdkDeviceType" name="type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetClientPointer" cname="get_client_pointer">
        <return-type type="GdkDevice*" />
        <parameters />
      </virtual_method>
      <method name="GetClientPointer" cname="gdk_device_manager_get_client_pointer" deprecated="1">
        <return-type type="GdkDevice*" />
      </method>
      <method name="GetDisplay" cname="gdk_device_manager_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetType" cname="gdk_device_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListDevices" cname="gdk_device_manager_list_devices" deprecated="1">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GdkDeviceType" name="type" />
        </parameters>
      </method>
    </object>
    <object name="DeviceTool" cname="GdkDeviceTool" parent="GObject">
      <class_struct cname="GdkDeviceToolClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
      </class_struct>
      <property name="Serial" cname="serial" type="guint64" readable="true" writeable="true" construct-only="true" />
      <property name="ToolType" cname="tool-type" type="GdkDeviceToolType" readable="true" writeable="true" construct-only="true" />
      <property name="Axes" cname="axes" type="GdkAxisFlags" readable="true" writeable="true" construct-only="true" />
      <property name="HardwareId" cname="hardware-id" type="guint64" readable="true" writeable="true" construct-only="true" />
      <method name="GetHardwareId" cname="gdk_device_tool_get_hardware_id">
        <return-type type="guint64" />
      </method>
      <method name="GetSerial" cname="gdk_device_tool_get_serial">
        <return-type type="guint64" />
      </method>
      <method name="GetToolType" cname="gdk_device_tool_get_tool_type">
        <return-type type="GdkDeviceToolType" />
      </method>
      <method name="GetType" cname="gdk_device_tool_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Display" cname="GdkDisplay" parent="GObject">
      <class_struct cname="GdkDisplayClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <field name="WindowType" cname="window_type" type="GType" />
        <method vm="get_name" />
        <method vm="get_default_screen" />
        <method vm="beep" />
        <method vm="sync" />
        <method vm="flush" />
        <method vm="has_pending" />
        <method vm="queue_events" />
        <method vm="make_default" />
        <method vm="get_default_group" />
        <method vm="supports_selection_notification" />
        <method vm="request_selection_notification" />
        <method vm="supports_shapes" />
        <method vm="supports_input_shapes" />
        <method vm="supports_composite" />
        <method vm="supports_cursor_alpha" />
        <method vm="supports_cursor_color" />
        <method vm="supports_clipboard_persistence" />
        <method vm="store_clipboard" />
        <method vm="get_default_cursor_size" />
        <method vm="get_maximal_cursor_size" />
        <method vm="get_cursor_for_type" />
        <method vm="get_cursor_for_name" />
        <method vm="get_cursor_for_surface" />
        <method vm="get_app_launch_context" />
        <method vm="before_process_all_updates" />
        <method vm="after_process_all_updates" />
        <method vm="get_next_serial" />
        <method vm="notify_startup_complete" />
        <method vm="event_data_copy" />
        <method vm="event_data_free" />
        <method vm="create_window_impl" />
        <method vm="get_keymap" />
        <method vm="push_error_trap" />
        <method vm="pop_error_trap" />
        <method vm="get_selection_owner" />
        <method vm="set_selection_owner" />
        <method vm="send_selection_notify" />
        <method vm="get_selection_property" />
        <method vm="convert_selection" />
        <method vm="text_property_to_utf8_list" />
        <method vm="utf8_to_string_target" />
        <method vm="make_gl_context_current" />
        <method vm="get_default_seat" />
        <method vm="get_n_monitors" />
        <method vm="get_monitor" />
        <method vm="get_primary_monitor" />
        <method vm="get_monitor_at_window" />
        <method signal_vm="opened" />
        <method signal_vm="closed" />
      </class_struct>
      <signal name="Opened" cname="opened" when="LAST" field_name="opened">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="Closed" cname="closed" when="LAST" field_name="closed">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_error" />
        </parameters>
      </signal>
      <signal name="SeatAdded" cname="seat-added" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="p0" type="GdkSeat" />
        </parameters>
      </signal>
      <signal name="SeatRemoved" cname="seat-removed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="p0" type="GdkSeat" />
        </parameters>
      </signal>
      <signal name="MonitorAdded" cname="monitor-added" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="p0" type="GdkMonitor" />
        </parameters>
      </signal>
      <signal name="MonitorRemoved" cname="monitor-removed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="p0" type="GdkMonitor" />
        </parameters>
      </signal>
      <virtual_method name="GetName" cname="get_name">
        <return-type type="gchar*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetDefaultScreen" cname="get_default_screen">
        <return-type type="GdkScreen*" />
        <parameters />
      </virtual_method>
      <virtual_method name="Beep" cname="beep">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="Sync" cname="sync">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="Flush" cname="flush">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="HasPending" cname="has_pending">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="QueueEvents" cname="queue_events">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="MakeDefault" cname="make_default">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetDefaultGroup" cname="get_default_group">
        <return-type type="GdkWindow*" />
        <parameters />
      </virtual_method>
      <virtual_method name="SupportsSelectionNotification" cname="supports_selection_notification">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="RequestSelectionNotification" cname="request_selection_notification">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </virtual_method>
      <virtual_method name="SupportsShapes" cname="supports_shapes">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="SupportsInputShapes" cname="supports_input_shapes">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="SupportsComposite" cname="supports_composite">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="SupportsCursorAlpha" cname="supports_cursor_alpha">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="SupportsCursorColor" cname="supports_cursor_color">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="SupportsClipboardPersistence" cname="supports_clipboard_persistence">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="StoreClipboard" cname="store_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="clipboard_window" />
          <parameter type="guint32" name="time_" />
          <parameter type="const-GdkAtom*" name="targets" />
          <parameter type="gint" name="n_targets" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDefaultCursorSize" cname="get_default_cursor_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMaximalCursorSize" cname="get_maximal_cursor_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCursorForType" cname="get_cursor_for_type">
        <return-type type="GdkCursor*" />
        <parameters>
          <parameter type="GdkCursorType" name="type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCursorForName" cname="get_cursor_for_name">
        <return-type type="GdkCursor*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCursorForSurface" cname="get_cursor_for_surface">
        <return-type type="GdkCursor*" />
        <parameters>
          <parameter type="cairo_surface_t*" name="surface" />
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetAppLaunchContext" cname="get_app_launch_context">
        <return-type type="GdkAppLaunchContext*" />
        <parameters />
      </virtual_method>
      <virtual_method name="BeforeProcessAllUpdates" cname="before_process_all_updates">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="AfterProcessAllUpdates" cname="after_process_all_updates">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetNextSerial" cname="get_next_serial">
        <return-type type="gulong" />
        <parameters />
      </virtual_method>
      <virtual_method name="NotifyStartupComplete" cname="notify_startup_complete">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="startup_id" />
        </parameters>
      </virtual_method>
      <virtual_method name="EventDataCopy" cname="event_data_copy">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="GdkEvent*" name="new_event" />
        </parameters>
      </virtual_method>
      <virtual_method name="EventDataFree" cname="event_data_free">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateWindowImpl" cname="create_window_impl">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkWindow*" name="real_parent" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="GdkEventMask" name="event_mask" />
          <parameter type="GdkWindowAttr*" name="attributes" />
          <parameter type="gint" name="attributes_mask" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetKeymap" cname="get_keymap">
        <return-type type="GdkKeymap*" />
        <parameters />
      </virtual_method>
      <virtual_method name="PushErrorTrap" cname="push_error_trap">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="PopErrorTrap" cname="pop_error_trap">
        <return-type type="gint" />
        <parameters>
          <parameter type="gboolean" name="ignore" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelectionOwner" cname="get_selection_owner">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSelectionOwner" cname="set_selection_owner">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="owner" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time" />
          <parameter type="gboolean" name="send_event" />
        </parameters>
      </virtual_method>
      <virtual_method name="SendSelectionNotify" cname="send_selection_notify">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="guint32" name="time" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelectionProperty" cname="get_selection_property">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="guchar**" name="data" />
          <parameter type="GdkAtom*" name="type" />
          <parameter type="gint*" name="format" />
        </parameters>
      </virtual_method>
      <virtual_method name="ConvertSelection" cname="convert_selection">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint32" name="time" />
        </parameters>
      </virtual_method>
      <virtual_method name="TextPropertyToUtf8List" cname="text_property_to_utf8_list">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkAtom" name="encoding" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gchar***" name="list" />
        </parameters>
      </virtual_method>
      <virtual_method name="Utf8ToStringTarget" cname="utf8_to_string_target">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </virtual_method>
      <virtual_method name="MakeGlContextCurrent" cname="make_gl_context_current">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkGLContext*" name="context" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDefaultSeat" cname="get_default_seat">
        <return-type type="GdkSeat*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetNMonitors" cname="get_n_monitors">
        <return-type type="int" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetMonitor" cname="get_monitor">
        <return-type type="GdkMonitor*" />
        <parameters>
          <parameter type="int" name="index" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPrimaryMonitor" cname="get_primary_monitor">
        <return-type type="GdkMonitor*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetMonitorAtWindow" cname="get_monitor_at_window">
        <return-type type="GdkMonitor*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </virtual_method>
      <method name="Beep" cname="gdk_display_beep">
        <return-type type="void" />
      </method>
      <method name="Close" cname="gdk_display_close">
        <return-type type="void" />
      </method>
      <method name="DeviceIsGrabbed" cname="gdk_display_device_is_grabbed">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </method>
      <method name="Flush" cname="gdk_display_flush">
        <return-type type="void" />
      </method>
      <method name="GetAppLaunchContext" cname="gdk_display_get_app_launch_context">
        <return-type type="GdkAppLaunchContext*" />
      </method>
      <method name="GetDefault" cname="gdk_display_get_default" shared="true">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetDefaultCursorSize" cname="gdk_display_get_default_cursor_size">
        <return-type type="guint" />
      </method>
      <method name="GetDefaultGroup" cname="gdk_display_get_default_group">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetDefaultScreen" cname="gdk_display_get_default_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetDefaultSeat" cname="gdk_display_get_default_seat">
        <return-type type="GdkSeat*" />
      </method>
      <method name="GetDeviceManager" cname="gdk_display_get_device_manager" deprecated="1">
        <return-type type="GdkDeviceManager*" />
      </method>
      <method name="GetEvent" cname="gdk_display_get_event">
        <return-type type="GdkEvent*" />
      </method>
      <method name="GetMaximalCursorSize" cname="gdk_display_get_maximal_cursor_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </method>
      <method name="GetMonitor" cname="gdk_display_get_monitor">
        <return-type type="GdkMonitor*" />
        <parameters>
          <parameter type="int" name="monitor_num" />
        </parameters>
      </method>
      <method name="GetMonitorAtPoint" cname="gdk_display_get_monitor_at_point">
        <return-type type="GdkMonitor*" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="GetMonitorAtWindow" cname="gdk_display_get_monitor_at_window">
        <return-type type="GdkMonitor*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetNMonitors" cname="gdk_display_get_n_monitors">
        <return-type type="int" />
      </method>
      <method name="GetNScreens" cname="gdk_display_get_n_screens" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetName" cname="gdk_display_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPointer" cname="gdk_display_get_pointer" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen**" name="screen" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetPrimaryMonitor" cname="gdk_display_get_primary_monitor">
        <return-type type="GdkMonitor*" />
      </method>
      <method name="GetScreen" cname="gdk_display_get_screen" deprecated="1">
        <return-type type="GdkScreen*" />
        <parameters>
          <parameter type="gint" name="screen_num" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_display_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWindowAtPointer" cname="gdk_display_get_window_at_pointer" deprecated="1">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gint*" name="win_x" />
          <parameter type="gint*" name="win_y" />
        </parameters>
      </method>
      <method name="HasPending" cname="gdk_display_has_pending">
        <return-type type="gboolean" />
      </method>
      <method name="IsClosed" cname="gdk_display_is_closed">
        <return-type type="gboolean" />
      </method>
      <method name="KeyboardUngrab" cname="gdk_display_keyboard_ungrab" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="ListDevices" cname="gdk_display_list_devices" deprecated="1">
        <return-type type="GList*" />
      </method>
      <method name="ListSeats" cname="gdk_display_list_seats">
        <return-type type="GList*" />
      </method>
      <method name="NotifyStartupComplete" cname="gdk_display_notify_startup_complete">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="startup_id" />
        </parameters>
      </method>
      <method name="Open" cname="gdk_display_open" shared="true">
        <return-type type="GdkDisplay*" />
        <parameters>
          <parameter type="const-gchar*" name="display_name" />
        </parameters>
      </method>
      <method name="OpenDefaultLibgtkOnly" cname="gdk_display_open_default_libgtk_only" deprecated="1" shared="true">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="PeekEvent" cname="gdk_display_peek_event">
        <return-type type="GdkEvent*" />
      </method>
      <method name="PointerIsGrabbed" cname="gdk_display_pointer_is_grabbed" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="PointerUngrab" cname="gdk_display_pointer_ungrab" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="PutEvent" cname="gdk_display_put_event">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="RequestSelectionNotification" cname="gdk_display_request_selection_notification">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="SetDoubleClickDistance" cname="gdk_display_set_double_click_distance">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="distance" />
        </parameters>
      </method>
      <method name="SetDoubleClickTime" cname="gdk_display_set_double_click_time">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="msec" />
        </parameters>
      </method>
      <method name="StoreClipboard" cname="gdk_display_store_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="clipboard_window" />
          <parameter type="guint32" name="time_" />
          <parameter type="const-GdkAtom*" name="targets" />
          <parameter type="gint" name="n_targets" />
        </parameters>
      </method>
      <method name="SupportsClipboardPersistence" cname="gdk_display_supports_clipboard_persistence">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsComposite" cname="gdk_display_supports_composite" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsCursorAlpha" cname="gdk_display_supports_cursor_alpha">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsCursorColor" cname="gdk_display_supports_cursor_color">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsInputShapes" cname="gdk_display_supports_input_shapes">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsSelectionNotification" cname="gdk_display_supports_selection_notification">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsShapes" cname="gdk_display_supports_shapes">
        <return-type type="gboolean" />
      </method>
      <method name="Sync" cname="gdk_display_sync">
        <return-type type="void" />
      </method>
      <method name="WarpPointer" cname="gdk_display_warp_pointer" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
    </object>
    <object name="DisplayManager" cname="GdkDisplayManager" parent="GObject">
      <class_struct cname="GdkDisplayManagerClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method signal_vm="display_opened" />
      </class_struct>
      <signal name="DisplayOpened" cname="display-opened" when="LAST" field_name="display_opened">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
        </parameters>
      </signal>
      <property name="DefaultDisplay" cname="default-display" type="GdkDisplay" readable="true" writeable="true" />
      <method name="Get" cname="gdk_display_manager_get" shared="true">
        <return-type type="GdkDisplayManager*" />
      </method>
      <method name="GetDefaultDisplay" cname="gdk_display_manager_get_default_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetType" cname="gdk_display_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListDisplays" cname="gdk_display_manager_list_displays">
        <return-type type="GSList*" />
      </method>
      <method name="OpenDisplay" cname="gdk_display_manager_open_display">
        <return-type type="GdkDisplay*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetDefaultDisplay" cname="gdk_display_manager_set_default_display">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
        </parameters>
      </method>
    </object>
    <object name="DragContext" cname="GdkDragContext" parent="GObject">
      <class_struct cname="GdkDragContextClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="find_window" />
        <method vm="get_selection" />
        <method vm="drag_motion" />
        <method vm="drag_status" />
        <method vm="drag_abort" />
        <method vm="drag_drop" />
        <method vm="drop_reply" />
        <method vm="drop_finish" />
        <method vm="drop_status" />
        <method vm="get_drag_window" />
        <method vm="set_hotspot" />
        <method vm="drop_done" />
        <method vm="manage_dnd" />
        <method vm="set_cursor" />
        <method signal_vm="cancel" />
        <method signal_vm="drop_performed" />
        <method signal_vm="dnd_finished" />
        <method vm="handle_event" />
        <method signal_vm="action_changed" />
        <method vm="commit_drag_status" />
      </class_struct>
      <signal name="Cancel" cname="cancel" when="LAST" field_name="cancel">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragCancelReason" name="reason" />
        </parameters>
      </signal>
      <signal name="DropPerformed" cname="drop-performed" when="LAST" field_name="drop_performed">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time" />
        </parameters>
      </signal>
      <signal name="DndFinished" cname="dnd-finished" when="LAST" field_name="dnd_finished">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="ActionChanged" cname="action-changed" when="LAST" field_name="action_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragAction" name="action" />
        </parameters>
      </signal>
      <virtual_method name="FindWindow" cname="find_window">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkWindow*" name="drag_window" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="gint" name="x_root" />
          <parameter type="gint" name="y_root" />
          <parameter type="GdkDragProtocol*" name="protocol" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelection" cname="get_selection">
        <return-type type="GdkAtom" />
        <parameters />
      </virtual_method>
      <virtual_method name="DragMotion" cname="drag_motion">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="dest_window" />
          <parameter type="GdkDragProtocol" name="protocol" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="GdkDragAction" name="suggested_action" />
          <parameter type="GdkDragAction" name="possible_actions" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="DragStatus" cname="drag_status">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragAction" name="action" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="DragAbort" cname="drag_abort">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="DragDrop" cname="drag_drop">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="DropReply" cname="drop_reply">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="accept" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="DropFinish" cname="drop_finish">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="success" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </virtual_method>
      <virtual_method name="DropStatus" cname="drop_status">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetDragWindow" cname="get_drag_window">
        <return-type type="GdkWindow*" />
        <parameters />
      </virtual_method>
      <virtual_method name="SetHotspot" cname="set_hotspot">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </virtual_method>
      <virtual_method name="DropDone" cname="drop_done">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="success" />
        </parameters>
      </virtual_method>
      <virtual_method name="ManageDnd" cname="manage_dnd">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="ipc_window" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCursor" cname="set_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkCursor*" name="cursor" />
        </parameters>
      </virtual_method>
      <virtual_method name="HandleEvent" cname="handle_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </virtual_method>
      <virtual_method name="CommitDragStatus" cname="commit_drag_status">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <method name="GetActions" cname="gdk_drag_context_get_actions">
        <return-type type="GdkDragAction" />
      </method>
      <method name="GetDestWindow" cname="gdk_drag_context_get_dest_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetDevice" cname="gdk_drag_context_get_device">
        <return-type type="GdkDevice*" />
      </method>
      <method name="GetDragWindow" cname="gdk_drag_context_get_drag_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetProtocol" cname="gdk_drag_context_get_protocol">
        <return-type type="GdkDragProtocol" />
      </method>
      <method name="GetSelectedAction" cname="gdk_drag_context_get_selected_action">
        <return-type type="GdkDragAction" />
      </method>
      <method name="GetSourceWindow" cname="gdk_drag_context_get_source_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetSuggestedAction" cname="gdk_drag_context_get_suggested_action">
        <return-type type="GdkDragAction" />
      </method>
      <method name="GetType" cname="gdk_drag_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListTargets" cname="gdk_drag_context_list_targets">
        <return-type type="GList*" />
      </method>
      <method name="ManageDnd" cname="gdk_drag_context_manage_dnd">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="ipc_window" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="SetDevice" cname="gdk_drag_context_set_device">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </method>
      <method name="SetHotspot" cname="gdk_drag_context_set_hotspot">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
    </object>
    <object name="DrawingContext" cname="GdkDrawingContext" parent="GObject">
      <class_struct cname="GdkDrawingContextClass">
        <field name="ParentInstance" cname="parent_instance" type="GObjectClass" />
      </class_struct>
      <property name="Window" cname="window" type="GdkWindow" readable="true" writeable="true" construct-only="true" />
      <property name="Clip" cname="clip" type="CairoGobjectRegion" readable="true" writeable="true" construct-only="true" />
      <method name="GetCairoContext" cname="gdk_drawing_context_get_cairo_context">
        <return-type type="cairo_t*" />
      </method>
      <method name="GetClip" cname="gdk_drawing_context_get_clip">
        <return-type type="cairo_region_t*" />
      </method>
      <method name="GetType" cname="gdk_drawing_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWindow" cname="gdk_drawing_context_get_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="IsValid" cname="gdk_drawing_context_is_valid">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="FrameClock" cname="GdkFrameClock" parent="GObject">
      <class_struct cname="GdkFrameClockClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="get_frame_time" />
        <method vm="request_phase" />
        <method vm="begin_updating" />
        <method vm="end_updating" />
        <method vm="freeze" />
        <method vm="thaw" />
      </class_struct>
      <signal name="FlushEvents" cname="flush-events" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="BeforePaint" cname="before-paint" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="Update" cname="update" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="Layout" cname="layout" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="Paint" cname="paint" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="AfterPaint" cname="after-paint" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="ResumeEvents" cname="resume-events" when="LAST">
        <return-type type="void" />
        <parameters />
      </signal>
      <virtual_method name="GetFrameTime" cname="get_frame_time">
        <return-type type="gint64" />
        <parameters />
      </virtual_method>
      <virtual_method name="RequestPhase" cname="request_phase">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFrameClockPhase" name="phase" />
        </parameters>
      </virtual_method>
      <virtual_method name="BeginUpdating" cname="begin_updating">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="EndUpdating" cname="end_updating">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="Freeze" cname="freeze">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="Thaw" cname="thaw">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <method name="BeginUpdating" cname="gdk_frame_clock_begin_updating">
        <return-type type="void" />
      </method>
      <method name="EndUpdating" cname="gdk_frame_clock_end_updating">
        <return-type type="void" />
      </method>
      <method name="GetCurrentTimings" cname="gdk_frame_clock_get_current_timings">
        <return-type type="GdkFrameTimings*" />
      </method>
      <method name="GetFrameCounter" cname="gdk_frame_clock_get_frame_counter">
        <return-type type="gint64" />
      </method>
      <method name="GetFrameTime" cname="gdk_frame_clock_get_frame_time">
        <return-type type="gint64" />
      </method>
      <method name="GetHistoryStart" cname="gdk_frame_clock_get_history_start">
        <return-type type="gint64" />
      </method>
      <method name="GetRefreshInfo" cname="gdk_frame_clock_get_refresh_info">
        <return-type type="void" />
        <parameters>
          <parameter type="gint64" name="base_time" />
          <parameter type="gint64*" name="refresh_interval_return" />
          <parameter type="gint64*" name="presentation_time_return" />
        </parameters>
      </method>
      <method name="GetTimings" cname="gdk_frame_clock_get_timings">
        <return-type type="GdkFrameTimings*" />
        <parameters>
          <parameter type="gint64" name="frame_counter" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_frame_clock_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RequestPhase" cname="gdk_frame_clock_request_phase">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFrameClockPhase" name="phase" />
        </parameters>
      </method>
    </object>
    <object name="FrameClockIdle" cname="GdkFrameClockIdle" parent="GdkFrameClock">
      <class_struct cname="GdkFrameClockIdleClass">
        <field name="ParentClass" cname="parent_class" type="GdkFrameClockClass" />
      </class_struct>
      <field name="Priv" cname="priv" type="GdkFrameClockIdlePrivate*" />
      <method name="GetType" cname="gdk_frame_clock_idle_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="GLContext" cname="GdkGLContext" parent="GObject">
      <class_struct cname="GdkGLContextClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="realize" />
        <method vm="end_frame" />
        <method vm="texture_from_surface" />
      </class_struct>
      <property name="Display" cname="display" type="GdkDisplay" readable="true" writeable="true" construct-only="true" />
      <property name="Window" cname="window" type="GdkWindow" readable="true" writeable="true" construct-only="true" />
      <property name="SharedContext" cname="shared-context" type="GdkGlContext" readable="true" writeable="true" construct-only="true" />
      <virtual_method name="Realize" cname="realize">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="EndFrame" cname="end_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_region_t*" name="painted" />
          <parameter type="cairo_region_t*" name="damage" />
        </parameters>
      </virtual_method>
      <virtual_method name="TextureFromSurface" cname="texture_from_surface">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="cairo_surface_t*" name="surface" />
          <parameter type="cairo_region_t*" name="region" />
        </parameters>
      </virtual_method>
      <method name="ClearCurrent" cname="gdk_gl_context_clear_current" shared="true">
        <return-type type="void" />
      </method>
      <method name="GetCurrent" cname="gdk_gl_context_get_current" shared="true">
        <return-type type="GdkGLContext*" />
      </method>
      <method name="GetDebugEnabled" cname="gdk_gl_context_get_debug_enabled">
        <return-type type="gboolean" />
      </method>
      <method name="GetDisplay" cname="gdk_gl_context_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetForwardCompatible" cname="gdk_gl_context_get_forward_compatible">
        <return-type type="gboolean" />
      </method>
      <method name="GetRequiredVersion" cname="gdk_gl_context_get_required_version">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="major" />
          <parameter type="int*" name="minor" />
        </parameters>
      </method>
      <method name="GetSharedContext" cname="gdk_gl_context_get_shared_context">
        <return-type type="GdkGLContext*" />
      </method>
      <method name="GetType" cname="gdk_gl_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseEs" cname="gdk_gl_context_get_use_es">
        <return-type type="gboolean" />
      </method>
      <method name="GetVersion" cname="gdk_gl_context_get_version">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="major" />
          <parameter type="int*" name="minor" />
        </parameters>
      </method>
      <method name="GetWindow" cname="gdk_gl_context_get_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="IsLegacy" cname="gdk_gl_context_is_legacy">
        <return-type type="gboolean" />
      </method>
      <method name="MakeCurrent" cname="gdk_gl_context_make_current">
        <return-type type="void" />
      </method>
      <method name="Realize" cname="gdk_gl_context_realize">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetDebugEnabled" cname="gdk_gl_context_set_debug_enabled">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enabled" />
        </parameters>
      </method>
      <method name="SetForwardCompatible" cname="gdk_gl_context_set_forward_compatible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="compatible" />
        </parameters>
      </method>
      <method name="SetRequiredVersion" cname="gdk_gl_context_set_required_version">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="major" />
          <parameter type="int" name="minor" />
        </parameters>
      </method>
      <method name="SetUseEs" cname="gdk_gl_context_set_use_es">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="use_es" />
        </parameters>
      </method>
    </object>
    <object name="Keymap" cname="GdkKeymap" parent="GObject">
      <class_struct cname="GdkKeymapClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="get_direction" />
        <method vm="have_bidi_layouts" />
        <method vm="get_caps_lock_state" />
        <method vm="get_num_lock_state" />
        <method vm="get_scroll_lock_state" />
        <method vm="get_entries_for_keyval" />
        <method vm="get_entries_for_keycode" />
        <method vm="lookup_key" />
        <method vm="translate_keyboard_state" />
        <method vm="add_virtual_modifiers" />
        <method vm="map_virtual_modifiers" />
        <method vm="get_modifier_mask" />
        <method vm="get_modifier_state" />
        <method signal_vm="direction_changed" />
        <method signal_vm="keys_changed" />
        <method signal_vm="state_changed" />
      </class_struct>
      <signal name="DirectionChanged" cname="direction-changed" when="LAST" field_name="direction_changed">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="KeysChanged" cname="keys-changed" when="LAST" field_name="keys_changed">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="StateChanged" cname="state_changed" when="LAST" field_name="state_changed">
        <return-type type="void" />
        <parameters />
      </signal>
      <virtual_method name="GetDirection" cname="get_direction">
        <return-type type="PangoDirection" />
        <parameters />
      </virtual_method>
      <virtual_method name="HaveBidiLayouts" cname="have_bidi_layouts">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetCapsLockState" cname="get_caps_lock_state">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetNumLockState" cname="get_num_lock_state">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetScrollLockState" cname="get_scroll_lock_state">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetEntriesForKeyval" cname="get_entries_for_keyval">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkKeymapKey**" name="keys" />
          <parameter type="gint*" name="n_keys" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetEntriesForKeycode" cname="get_entries_for_keycode">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="hardware_keycode" />
          <parameter type="GdkKeymapKey**" name="keys" />
          <parameter type="guint**" name="keyvals" />
          <parameter type="gint*" name="n_entries" />
        </parameters>
      </virtual_method>
      <virtual_method name="LookupKey" cname="lookup_key">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-GdkKeymapKey*" name="key" />
        </parameters>
      </virtual_method>
      <virtual_method name="TranslateKeyboardState" cname="translate_keyboard_state">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="hardware_keycode" />
          <parameter type="GdkModifierType" name="state" />
          <parameter type="gint" name="group" />
          <parameter type="guint*" name="keyval" />
          <parameter type="gint*" name="effective_group" />
          <parameter type="gint*" name="level" />
          <parameter type="GdkModifierType*" name="consumed_modifiers" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddVirtualModifiers" cname="add_virtual_modifiers">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </virtual_method>
      <virtual_method name="MapVirtualModifiers" cname="map_virtual_modifiers">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetModifierMask" cname="get_modifier_mask">
        <return-type type="GdkModifierType" />
        <parameters>
          <parameter type="GdkModifierIntent" name="intent" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetModifierState" cname="get_modifier_state">
        <return-type type="guint" />
        <parameters />
      </virtual_method>
      <method name="AddVirtualModifiers" cname="gdk_keymap_add_virtual_modifiers">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </method>
      <method name="GetCapsLockState" cname="gdk_keymap_get_caps_lock_state">
        <return-type type="gboolean" />
      </method>
      <method name="GetDefault" cname="gdk_keymap_get_default" shared="true">
        <return-type type="GdkKeymap*" />
      </method>
      <method name="GetDirection" cname="gdk_keymap_get_direction">
        <return-type type="PangoDirection" />
      </method>
      <method name="GetEntriesForKeycode" cname="gdk_keymap_get_entries_for_keycode">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="hardware_keycode" />
          <parameter type="GdkKeymapKey**" name="keys" />
          <parameter type="guint**" name="keyvals" />
          <parameter type="gint*" name="n_entries" />
        </parameters>
      </method>
      <method name="GetEntriesForKeyval" cname="gdk_keymap_get_entries_for_keyval">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkKeymapKey**" name="keys" />
          <parameter type="gint*" name="n_keys" />
        </parameters>
      </method>
      <method name="GetForDisplay" cname="gdk_keymap_get_for_display" shared="true">
        <return-type type="GdkKeymap*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
        </parameters>
      </method>
      <method name="GetModifierMask" cname="gdk_keymap_get_modifier_mask">
        <return-type type="GdkModifierType" />
        <parameters>
          <parameter type="GdkModifierIntent" name="intent" />
        </parameters>
      </method>
      <method name="GetModifierState" cname="gdk_keymap_get_modifier_state">
        <return-type type="guint" />
      </method>
      <method name="GetNumLockState" cname="gdk_keymap_get_num_lock_state">
        <return-type type="gboolean" />
      </method>
      <method name="GetScrollLockState" cname="gdk_keymap_get_scroll_lock_state">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gdk_keymap_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HaveBidiLayouts" cname="gdk_keymap_have_bidi_layouts">
        <return-type type="gboolean" />
      </method>
      <method name="LookupKey" cname="gdk_keymap_lookup_key">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-GdkKeymapKey*" name="key" />
        </parameters>
      </method>
      <method name="MapVirtualModifiers" cname="gdk_keymap_map_virtual_modifiers">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </method>
      <method name="TranslateKeyboardState" cname="gdk_keymap_translate_keyboard_state">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="hardware_keycode" />
          <parameter type="GdkModifierType" name="state" />
          <parameter type="gint" name="group" />
          <parameter type="guint*" name="keyval" />
          <parameter type="gint*" name="effective_group" />
          <parameter type="gint*" name="level" />
          <parameter type="GdkModifierType*" name="consumed_modifiers" />
        </parameters>
      </method>
    </object>
    <object name="Monitor" cname="GdkMonitor" parent="GObject">
      <class_struct cname="GdkMonitorClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="get_workarea" />
      </class_struct>
      <property name="Display" cname="display" type="GdkDisplay" readable="true" writeable="true" construct-only="true" />
      <property name="Manufacturer" cname="manufacturer" type="gchar*" readable="true" />
      <property name="Model" cname="model" type="gchar*" readable="true" />
      <property name="ScaleFactor" cname="scale-factor" type="gint" readable="true" />
      <property name="Geometry" cname="geometry" type="GdkRectangle" readable="true" />
      <property name="Workarea" cname="workarea" type="GdkRectangle" readable="true" />
      <property name="WidthMm" cname="width-mm" type="gint" readable="true" />
      <property name="HeightMm" cname="height-mm" type="gint" readable="true" />
      <property name="RefreshRate" cname="refresh-rate" type="gint" readable="true" />
      <property name="SubpixelLayout" cname="subpixel-layout" type="GdkSubpixelLayout" readable="true" />
      <signal name="Invalidate" cname="invalidate" when="FIRST">
        <return-type type="void" />
        <parameters />
      </signal>
      <virtual_method name="GetWorkarea" cname="get_workarea">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="geometry" />
        </parameters>
      </virtual_method>
      <method name="GetDisplay" cname="gdk_monitor_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetGeometry" cname="gdk_monitor_get_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="geometry" />
        </parameters>
      </method>
      <method name="GetHeightMm" cname="gdk_monitor_get_height_mm">
        <return-type type="int" />
      </method>
      <method name="GetManufacturer" cname="gdk_monitor_get_manufacturer">
        <return-type type="const-char*" />
      </method>
      <method name="GetModel" cname="gdk_monitor_get_model">
        <return-type type="const-char*" />
      </method>
      <method name="GetRefreshRate" cname="gdk_monitor_get_refresh_rate">
        <return-type type="int" />
      </method>
      <method name="GetScaleFactor" cname="gdk_monitor_get_scale_factor">
        <return-type type="int" />
      </method>
      <method name="GetSubpixelLayout" cname="gdk_monitor_get_subpixel_layout">
        <return-type type="GdkSubpixelLayout" />
      </method>
      <method name="GetType" cname="gdk_monitor_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidthMm" cname="gdk_monitor_get_width_mm">
        <return-type type="int" />
      </method>
      <method name="GetWorkarea" cname="gdk_monitor_get_workarea">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="workarea" />
        </parameters>
      </method>
      <method name="IsPrimary" cname="gdk_monitor_is_primary">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="Screen" cname="GdkScreen" parent="GObject">
      <class_struct cname="GdkScreenClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="get_display" />
        <method vm="get_width" />
        <method vm="get_height" />
        <method vm="get_width_mm" />
        <method vm="get_height_mm" />
        <method vm="get_number" />
        <method vm="get_root_window" />
        <method vm="get_n_monitors" />
        <method vm="get_primary_monitor" />
        <method vm="get_monitor_width_mm" />
        <method vm="get_monitor_height_mm" />
        <method vm="get_monitor_plug_name" />
        <method vm="get_monitor_geometry" />
        <method vm="get_monitor_workarea" />
        <method vm="list_visuals" />
        <method vm="get_system_visual" />
        <method vm="get_rgba_visual" />
        <method vm="is_composited" />
        <method vm="make_display_name" />
        <method vm="get_active_window" />
        <method vm="get_window_stack" />
        <method vm="broadcast_client_message" />
        <method vm="get_setting" />
        <method vm="visual_get_best_depth" />
        <method vm="visual_get_best_type" />
        <method vm="visual_get_best" />
        <method vm="visual_get_best_with_depth" />
        <method vm="visual_get_best_with_type" />
        <method vm="visual_get_best_with_both" />
        <method vm="query_depths" />
        <method vm="query_visual_types" />
        <method vm="get_monitor_scale_factor" />
        <method vm="size_changed" />
        <method vm="composited_changed" />
        <method vm="monitors_changed" />
      </class_struct>
      <virtual_method name="GetDisplay" cname="get_display">
        <return-type type="GdkDisplay*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetWidth" cname="get_width">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetHeight" cname="get_height">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetWidthMm" cname="get_width_mm">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetHeightMm" cname="get_height_mm">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetNumber" cname="get_number">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetRootWindow" cname="get_root_window">
        <return-type type="GdkWindow*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetNMonitors" cname="get_n_monitors">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetPrimaryMonitor" cname="get_primary_monitor">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetMonitorWidthMm" cname="get_monitor_width_mm">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMonitorHeightMm" cname="get_monitor_height_mm">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMonitorPlugName" cname="get_monitor_plug_name">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMonitorGeometry" cname="get_monitor_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMonitorWorkarea" cname="get_monitor_workarea">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </virtual_method>
      <virtual_method name="ListVisuals" cname="list_visuals">
        <return-type type="GList*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetSystemVisual" cname="get_system_visual">
        <return-type type="GdkVisual*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetRgbaVisual" cname="get_rgba_visual">
        <return-type type="GdkVisual*" />
        <parameters />
      </virtual_method>
      <virtual_method name="IsComposited" cname="is_composited">
        <return-type type="gboolean" />
        <parameters />
      </virtual_method>
      <virtual_method name="MakeDisplayName" cname="make_display_name">
        <return-type type="gchar*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetActiveWindow" cname="get_active_window">
        <return-type type="GdkWindow*" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetWindowStack" cname="get_window_stack">
        <return-type type="GList*" />
        <parameters />
      </virtual_method>
      <virtual_method name="BroadcastClientMessage" cname="broadcast_client_message">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSetting" cname="get_setting">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="VisualGetBestDepth" cname="visual_get_best_depth">
        <return-type type="gint" />
        <parameters />
      </virtual_method>
      <virtual_method name="VisualGetBestType" cname="visual_get_best_type">
        <return-type type="GdkVisualType" />
        <parameters />
      </virtual_method>
      <virtual_method name="VisualGetBest" cname="visual_get_best">
        <return-type type="GdkVisual*" />
        <parameters />
      </virtual_method>
      <virtual_method name="VisualGetBestWithDepth" cname="visual_get_best_with_depth">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="gint" name="depth" />
        </parameters>
      </virtual_method>
      <virtual_method name="VisualGetBestWithType" cname="visual_get_best_with_type">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="GdkVisualType" name="visual_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="VisualGetBestWithBoth" cname="visual_get_best_with_both">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="gint" name="depth" />
          <parameter type="GdkVisualType" name="visual_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="QueryDepths" cname="query_depths">
        <return-type type="void" />
        <parameters>
          <parameter type="gint**" name="depths" />
          <parameter type="gint*" name="count" />
        </parameters>
      </virtual_method>
      <virtual_method name="QueryVisualTypes" cname="query_visual_types">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkVisualType**" name="visual_types" />
          <parameter type="gint*" name="count" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMonitorScaleFactor" cname="get_monitor_scale_factor">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </virtual_method>
      <virtual_method name="SizeChanged" cname="size_changed">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="CompositedChanged" cname="composited_changed">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="MonitorsChanged" cname="monitors_changed">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <method name="GetActiveWindow" cname="gdk_screen_get_active_window" deprecated="1">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetDefault" cname="gdk_screen_get_default" shared="true">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetDisplay" cname="gdk_screen_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetFontOptions" cname="gdk_screen_get_font_options">
        <return-type type="const-cairo_font_options_t*" />
      </method>
      <method name="GetHeight" cname="gdk_screen_get_height" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetHeightMm" cname="gdk_screen_get_height_mm" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetMonitorAtPoint" cname="gdk_screen_get_monitor_at_point" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetMonitorAtWindow" cname="gdk_screen_get_monitor_at_window" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetMonitorGeometry" cname="gdk_screen_get_monitor_geometry" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </method>
      <method name="GetMonitorHeightMm" cname="gdk_screen_get_monitor_height_mm" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </method>
      <method name="GetMonitorPlugName" cname="gdk_screen_get_monitor_plug_name" deprecated="1">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </method>
      <method name="GetMonitorScaleFactor" cname="gdk_screen_get_monitor_scale_factor" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </method>
      <method name="GetMonitorWidthMm" cname="gdk_screen_get_monitor_width_mm" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </method>
      <method name="GetMonitorWorkarea" cname="gdk_screen_get_monitor_workarea" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </method>
      <method name="GetNMonitors" cname="gdk_screen_get_n_monitors" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetNumber" cname="gdk_screen_get_number" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetPrimaryMonitor" cname="gdk_screen_get_primary_monitor" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetResolution" cname="gdk_screen_get_resolution">
        <return-type type="gdouble" />
      </method>
      <method name="GetRgbaVisual" cname="gdk_screen_get_rgba_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetRootWindow" cname="gdk_screen_get_root_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetSetting" cname="gdk_screen_get_setting">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetSystemVisual" cname="gdk_screen_get_system_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetToplevelWindows" cname="gdk_screen_get_toplevel_windows">
        <return-type type="GList*" />
      </method>
      <method name="GetType" cname="gdk_screen_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gdk_screen_get_width" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetWidthMm" cname="gdk_screen_get_width_mm" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetWindowStack" cname="gdk_screen_get_window_stack">
        <return-type type="GList*" />
      </method>
      <method name="Height" cname="gdk_screen_height" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="HeightMm" cname="gdk_screen_height_mm" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="IsComposited" cname="gdk_screen_is_composited">
        <return-type type="gboolean" />
      </method>
      <method name="ListVisuals" cname="gdk_screen_list_visuals">
        <return-type type="GList*" />
      </method>
      <method name="MakeDisplayName" cname="gdk_screen_make_display_name" deprecated="1">
        <return-type type="gchar*" />
      </method>
      <method name="SetFontOptions" cname="gdk_screen_set_font_options">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_font_options_t*" name="options" />
        </parameters>
      </method>
      <method name="SetResolution" cname="gdk_screen_set_resolution">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="dpi" />
        </parameters>
      </method>
      <method name="Width" cname="gdk_screen_width" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="WidthMm" cname="gdk_screen_width_mm" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
    </object>
    <object name="Seat" cname="GdkSeat" parent="GObject">
      <class_struct cname="GdkSeatClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method vm="device_added" />
        <method vm="device_removed" />
        <method vm="device_changed" />
        <method vm="get_capabilities" />
        <method vm="grab" />
        <method vm="ungrab" />
        <method vm="get_master" />
        <method vm="get_slaves" />
        <method vm="get_tool" />
      </class_struct>
      <virtual_method name="DeviceAdded" cname="device_added">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </virtual_method>
      <virtual_method name="DeviceRemoved" cname="device_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </virtual_method>
      <virtual_method name="DeviceChanged" cname="device_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCapabilities" cname="get_capabilities">
        <return-type type="GdkSeatCapabilities" />
        <parameters />
      </virtual_method>
      <virtual_method name="Grab" cname="grab">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkSeatCapabilities" name="capabilities" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="GdkCursor*" name="cursor" />
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="GdkSeatGrabPrepareFunc" name="prepare_func" />
          <parameter type="gpointer" name="prepare_func_data" />
        </parameters>
      </virtual_method>
      <virtual_method name="Ungrab" cname="ungrab">
        <return-type type="void" />
        <parameters />
      </virtual_method>
      <virtual_method name="GetMaster" cname="get_master">
        <return-type type="GdkDevice*" />
        <parameters>
          <parameter type="GdkSeatCapabilities" name="capability" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSlaves" cname="get_slaves">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GdkSeatCapabilities" name="capabilities" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetTool" cname="get_tool">
        <return-type type="GdkDeviceTool*" />
        <parameters>
          <parameter type="guint64" name="serial" />
        </parameters>
      </virtual_method>
      <method name="GetCapabilities" cname="gdk_seat_get_capabilities">
        <return-type type="GdkSeatCapabilities" />
      </method>
      <method name="GetDisplay" cname="gdk_seat_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetKeyboard" cname="gdk_seat_get_keyboard">
        <return-type type="GdkDevice*" />
      </method>
      <method name="GetPointer" cname="gdk_seat_get_pointer">
        <return-type type="GdkDevice*" />
      </method>
      <method name="GetSlaves" cname="gdk_seat_get_slaves">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GdkSeatCapabilities" name="capabilities" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_seat_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Grab" cname="gdk_seat_grab">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkSeatCapabilities" name="capabilities" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="GdkCursor*" name="cursor" />
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="GdkSeatGrabPrepareFunc" name="prepare_func" />
          <parameter type="gpointer" name="prepare_func_data" />
        </parameters>
      </method>
      <method name="Ungrab" cname="gdk_seat_ungrab">
        <return-type type="void" />
      </method>
    </object>
    <object name="Visual" cname="GdkVisual" parent="GObject">
      <class_struct cname="GdkVisualClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
      </class_struct>
      <method name="GetBest" cname="gdk_visual_get_best" deprecated="1" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetBestDepth" cname="gdk_visual_get_best_depth" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="GetBestType" cname="gdk_visual_get_best_type" deprecated="1" shared="true">
        <return-type type="GdkVisualType" />
      </method>
      <method name="GetBestWithBoth" cname="gdk_visual_get_best_with_both" deprecated="1" shared="true">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="gint" name="depth" />
          <parameter type="GdkVisualType" name="visual_type" />
        </parameters>
      </method>
      <method name="GetBestWithDepth" cname="gdk_visual_get_best_with_depth" deprecated="1" shared="true">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="gint" name="depth" />
        </parameters>
      </method>
      <method name="GetBestWithType" cname="gdk_visual_get_best_with_type" deprecated="1" shared="true">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="GdkVisualType" name="visual_type" />
        </parameters>
      </method>
      <method name="GetBitsPerRgb" cname="gdk_visual_get_bits_per_rgb" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetBluePixelDetails" cname="gdk_visual_get_blue_pixel_details">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32*" name="mask" />
          <parameter type="gint*" name="shift" />
          <parameter type="gint*" name="precision" />
        </parameters>
      </method>
      <method name="GetByteOrder" cname="gdk_visual_get_byte_order" deprecated="1">
        <return-type type="GdkByteOrder" />
      </method>
      <method name="GetColormapSize" cname="gdk_visual_get_colormap_size" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetDepth" cname="gdk_visual_get_depth">
        <return-type type="gint" />
      </method>
      <method name="GetGreenPixelDetails" cname="gdk_visual_get_green_pixel_details">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32*" name="mask" />
          <parameter type="gint*" name="shift" />
          <parameter type="gint*" name="precision" />
        </parameters>
      </method>
      <method name="GetRedPixelDetails" cname="gdk_visual_get_red_pixel_details">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32*" name="mask" />
          <parameter type="gint*" name="shift" />
          <parameter type="gint*" name="precision" />
        </parameters>
      </method>
      <method name="GetScreen" cname="gdk_visual_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSystem" cname="gdk_visual_get_system" deprecated="1" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetType" cname="gdk_visual_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisualType" cname="gdk_visual_get_visual_type">
        <return-type type="GdkVisualType" />
      </method>
    </object>
    <object name="Window" cname="GdkWindow" parent="GObject">
      <class_struct cname="GdkWindowClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method signal_vm="pick_embedded_child" />
        <method signal_vm="to_embedder" />
        <method signal_vm="from_embedder" />
        <method signal_vm="create_surface" />
        <method vm="_gdk_reserved1" />
        <method vm="_gdk_reserved2" />
        <method vm="_gdk_reserved3" />
        <method vm="_gdk_reserved4" />
        <method vm="_gdk_reserved5" />
        <method vm="_gdk_reserved6" />
        <method vm="_gdk_reserved7" />
        <method vm="_gdk_reserved8" />
      </class_struct>
      <property name="Cursor" cname="cursor" type="GdkCursor" readable="true" writeable="true" />
      <signal name="PickEmbeddedChild" cname="pick-embedded-child" when="LAST" field_name="pick_embedded_child">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </signal>
      <signal name="ToEmbedder" cname="to-embedder" when="LAST" manual="true" field_name="to_embedder">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="offscreen_x" />
          <parameter type="gdouble" name="offscreen_y" />
          <parameter type="gdouble*" name="embedder_x" />
          <parameter type="gdouble*" name="embedder_y" />
        </parameters>
      </signal>
      <signal name="FromEmbedder" cname="from-embedder" when="LAST" manual="true" field_name="from_embedder">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="embedder_x" />
          <parameter type="gdouble" name="embedder_y" />
          <parameter type="gdouble*" name="offscreen_x" />
          <parameter type="gdouble*" name="offscreen_y" />
        </parameters>
      </signal>
      <signal name="CreateSurface" cname="create-surface" when="LAST" field_name="create_surface">
        <return-type type="cairo_surface_t*" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </signal>
      <signal name="MovedToRect" cname="moved-to-rect" when="FIRST" manual="true">
        <return-type type="void" />
        <parameters>
          <parameter name="p0" type="gpointer" />
          <parameter name="p1" type="gpointer" />
          <parameter name="p2" type="gboolean" />
          <parameter name="p3" type="gboolean" />
        </parameters>
      </signal>
      <virtual_method name="GdkReserved1" cname="_gdk_reserved1" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="GdkReserved2" cname="_gdk_reserved2" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="GdkReserved3" cname="_gdk_reserved3" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="GdkReserved4" cname="_gdk_reserved4" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="GdkReserved5" cname="_gdk_reserved5" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="GdkReserved6" cname="_gdk_reserved6" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="GdkReserved7" cname="_gdk_reserved7" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <virtual_method name="GdkReserved8" cname="_gdk_reserved8" shared="true" padding="true">
        <return-type type="void" />
      </virtual_method>
      <method name="AddFilter" cname="gdk_window_add_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFilterFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AtPointer" cname="gdk_window_at_pointer" deprecated="1" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gint*" name="win_x" />
          <parameter type="gint*" name="win_y" />
        </parameters>
      </method>
      <method name="Beep" cname="gdk_window_beep">
        <return-type type="void" />
      </method>
      <method name="BeginDrawFrame" cname="gdk_window_begin_draw_frame">
        <return-type type="GdkDrawingContext*" />
        <parameters>
          <parameter type="const-cairo_region_t*" name="region" />
        </parameters>
      </method>
      <method name="BeginMoveDrag" cname="gdk_window_begin_move_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="BeginMoveDragForDevice" cname="gdk_window_begin_move_drag_for_device">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="BeginPaintRect" cname="gdk_window_begin_paint_rect" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="BeginPaintRegion" cname="gdk_window_begin_paint_region" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_region_t*" name="region" />
        </parameters>
      </method>
      <method name="BeginResizeDrag" cname="gdk_window_begin_resize_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="BeginResizeDragForDevice" cname="gdk_window_begin_resize_drag_for_device">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="GdkDevice*" name="device" />
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="ConfigureFinished" cname="gdk_window_configure_finished" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ConstrainSize" cname="gdk_window_constrain_size" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGeometry*" name="geometry" />
          <parameter type="GdkWindowHints" name="flags" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint*" name="new_width" />
          <parameter type="gint*" name="new_height" />
        </parameters>
      </method>
      <method name="CoordsFromParent" cname="gdk_window_coords_from_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="parent_x" />
          <parameter type="gdouble" name="parent_y" />
          <parameter type="gdouble*" name="x" />
          <parameter type="gdouble*" name="y" />
        </parameters>
      </method>
      <method name="CoordsToParent" cname="gdk_window_coords_to_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
          <parameter type="gdouble*" name="parent_x" />
          <parameter type="gdouble*" name="parent_y" />
        </parameters>
      </method>
      <method name="CreateGlContext" cname="gdk_window_create_gl_context">
        <return-type type="GdkGLContext*" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="CreateSimilarImageSurface" cname="gdk_window_create_similar_image_surface">
        <return-type type="cairo_surface_t*" />
        <parameters>
          <parameter type="cairo_format_t" name="format" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="int" name="scale" />
        </parameters>
      </method>
      <method name="CreateSimilarSurface" cname="gdk_window_create_similar_surface">
        <return-type type="cairo_surface_t*" />
        <parameters>
          <parameter type="cairo_content_t" name="content" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="Deiconify" cname="gdk_window_deiconify">
        <return-type type="void" />
      </method>
      <method name="Destroy" cname="gdk_window_destroy">
        <return-type type="void" />
      </method>
      <method name="EnableSynchronizedConfigure" cname="gdk_window_enable_synchronized_configure" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="EndDrawFrame" cname="gdk_window_end_draw_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDrawingContext*" name="context" />
        </parameters>
      </method>
      <method name="EndPaint" cname="gdk_window_end_paint" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="EnsureNative" cname="gdk_window_ensure_native">
        <return-type type="gboolean" />
      </method>
      <method name="Flush" cname="gdk_window_flush" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Focus" cname="gdk_window_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="FreezeToplevelUpdatesLibgtkOnly" cname="gdk_window_freeze_toplevel_updates_libgtk_only" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="FreezeUpdates" cname="gdk_window_freeze_updates">
        <return-type type="void" />
      </method>
      <method name="Fullscreen" cname="gdk_window_fullscreen">
        <return-type type="void" />
      </method>
      <method name="FullscreenOnMonitor" cname="gdk_window_fullscreen_on_monitor">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor" />
        </parameters>
      </method>
      <method name="GeometryChanged" cname="gdk_window_geometry_changed">
        <return-type type="void" />
      </method>
      <method name="GetAcceptFocus" cname="gdk_window_get_accept_focus">
        <return-type type="gboolean" />
      </method>
      <method name="GetBackgroundPattern" cname="gdk_window_get_background_pattern" deprecated="1">
        <return-type type="cairo_pattern_t*" />
      </method>
      <method name="GetChildren" cname="gdk_window_get_children">
        <return-type type="GList*" />
      </method>
      <method name="GetChildrenWithUserData" cname="gdk_window_get_children_with_user_data">
        <return-type type="GList*" />
        <parameters>
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="GetClipRegion" cname="gdk_window_get_clip_region">
        <return-type type="cairo_region_t*" />
      </method>
      <method name="GetComposited" cname="gdk_window_get_composited" deprecated="1">
        <return-type type="gboolean" />
      </method>
      <method name="GetCursor" cname="gdk_window_get_cursor">
        <return-type type="GdkCursor*" />
      </method>
      <method name="GetDecorations" cname="gdk_window_get_decorations">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWMDecoration*" name="decorations" />
        </parameters>
      </method>
      <method name="GetDeviceCursor" cname="gdk_window_get_device_cursor">
        <return-type type="GdkCursor*" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </method>
      <method name="GetDeviceEvents" cname="gdk_window_get_device_events">
        <return-type type="GdkEventMask" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </method>
      <method name="GetDevicePosition" cname="gdk_window_get_device_position">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetDevicePositionDouble" cname="gdk_window_get_device_position_double">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
          <parameter type="gdouble*" name="x" />
          <parameter type="gdouble*" name="y" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetDisplay" cname="gdk_window_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetDragProtocol" cname="gdk_window_get_drag_protocol">
        <return-type type="GdkDragProtocol" />
        <parameters>
          <parameter type="GdkWindow**" name="target" />
        </parameters>
      </method>
      <method name="GetEffectiveParent" cname="gdk_window_get_effective_parent">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetEffectiveToplevel" cname="gdk_window_get_effective_toplevel">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetEventCompression" cname="gdk_window_get_event_compression">
        <return-type type="gboolean" />
      </method>
      <method name="GetEvents" cname="gdk_window_get_events">
        <return-type type="GdkEventMask" />
      </method>
      <method name="GetFocusOnMap" cname="gdk_window_get_focus_on_map">
        <return-type type="gboolean" />
      </method>
      <method name="GetFrameClock" cname="gdk_window_get_frame_clock">
        <return-type type="GdkFrameClock*" />
      </method>
      <method name="GetFrameExtents" cname="gdk_window_get_frame_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetFullscreenMode" cname="gdk_window_get_fullscreen_mode">
        <return-type type="GdkFullscreenMode" />
      </method>
      <method name="GetGeometry" cname="gdk_window_get_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetGroup" cname="gdk_window_get_group">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetHeight" cname="gdk_window_get_height">
        <return-type type="int" />
      </method>
      <method name="GetModalHint" cname="gdk_window_get_modal_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetOrigin" cname="gdk_window_get_origin">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetParent" cname="gdk_window_get_parent">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetPassThrough" cname="gdk_window_get_pass_through">
        <return-type type="gboolean" />
      </method>
      <method name="GetPointer" cname="gdk_window_get_pointer" deprecated="1">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetPosition" cname="gdk_window_get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetRootCoords" cname="gdk_window_get_root_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint*" name="root_x" />
          <parameter type="gint*" name="root_y" />
        </parameters>
      </method>
      <method name="GetRootOrigin" cname="gdk_window_get_root_origin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetScaleFactor" cname="gdk_window_get_scale_factor">
        <return-type type="gint" />
      </method>
      <method name="GetScreen" cname="gdk_window_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSourceEvents" cname="gdk_window_get_source_events">
        <return-type type="GdkEventMask" />
        <parameters>
          <parameter type="GdkInputSource" name="source" />
        </parameters>
      </method>
      <method name="GetState" cname="gdk_window_get_state">
        <return-type type="GdkWindowState" />
      </method>
      <method name="GetSupportMultidevice" cname="gdk_window_get_support_multidevice">
        <return-type type="gboolean" />
      </method>
      <method name="GetToplevel" cname="gdk_window_get_toplevel">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetType" cname="gdk_window_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetTypeHint" cname="gdk_window_get_type_hint">
        <return-type type="GdkWindowTypeHint" />
      </method>
      <method name="GetUpdateArea" cname="gdk_window_get_update_area">
        <return-type type="cairo_region_t*" />
      </method>
      <method name="GetUserData" cname="gdk_window_get_user_data">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer*" name="data" />
        </parameters>
      </method>
      <method name="GetVisibleRegion" cname="gdk_window_get_visible_region">
        <return-type type="cairo_region_t*" />
      </method>
      <method name="GetVisual" cname="gdk_window_get_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetWidth" cname="gdk_window_get_width">
        <return-type type="int" />
      </method>
      <method name="GetWindowType" cname="gdk_window_get_window_type">
        <return-type type="GdkWindowType" />
      </method>
      <method name="HasNative" cname="gdk_window_has_native">
        <return-type type="gboolean" />
      </method>
      <method name="Hide" cname="gdk_window_hide">
        <return-type type="void" />
      </method>
      <method name="Iconify" cname="gdk_window_iconify">
        <return-type type="void" />
      </method>
      <method name="InputShapeCombineRegion" cname="gdk_window_input_shape_combine_region">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_region_t*" name="shape_region" />
          <parameter type="gint" name="offset_x" />
          <parameter type="gint" name="offset_y" />
        </parameters>
      </method>
      <method name="InvalidateMaybeRecurse" cname="gdk_window_invalidate_maybe_recurse">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_region_t*" name="region" />
          <parameter type="GdkWindowChildFunc" name="child_func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="InvalidateRect" cname="gdk_window_invalidate_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkRectangle*" name="rect" />
          <parameter type="gboolean" name="invalidate_children" />
        </parameters>
      </method>
      <method name="InvalidateRegion" cname="gdk_window_invalidate_region">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_region_t*" name="region" />
          <parameter type="gboolean" name="invalidate_children" />
        </parameters>
      </method>
      <method name="IsDestroyed" cname="gdk_window_is_destroyed">
        <return-type type="gboolean" />
      </method>
      <method name="IsInputOnly" cname="gdk_window_is_input_only">
        <return-type type="gboolean" />
      </method>
      <method name="IsShaped" cname="gdk_window_is_shaped">
        <return-type type="gboolean" />
      </method>
      <method name="IsViewable" cname="gdk_window_is_viewable">
        <return-type type="gboolean" />
      </method>
      <method name="IsVisible" cname="gdk_window_is_visible">
        <return-type type="gboolean" />
      </method>
      <method name="Lower" cname="gdk_window_lower">
        <return-type type="void" />
      </method>
      <method name="MarkPaintFromClip" cname="gdk_window_mark_paint_from_clip">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
        </parameters>
      </method>
      <method name="Maximize" cname="gdk_window_maximize">
        <return-type type="void" />
      </method>
      <method name="MergeChildInputShapes" cname="gdk_window_merge_child_input_shapes">
        <return-type type="void" />
      </method>
      <method name="MergeChildShapes" cname="gdk_window_merge_child_shapes">
        <return-type type="void" />
      </method>
      <method name="Move" cname="gdk_window_move">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="MoveRegion" cname="gdk_window_move_region">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_region_t*" name="region" />
          <parameter type="gint" name="dx" />
          <parameter type="gint" name="dy" />
        </parameters>
      </method>
      <method name="MoveResize" cname="gdk_window_move_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <constructor cname="gdk_window_new">
        <parameters>
          <parameter type="GdkWindow*" name="parent" />
          <parameter type="GdkWindowAttr*" name="attributes" />
          <parameter type="gint" name="attributes_mask" />
        </parameters>
      </constructor>
      <method name="PeekChildren" cname="gdk_window_peek_children">
        <return-type type="GList*" />
      </method>
      <method name="ProcessAllUpdates" cname="gdk_window_process_all_updates" shared="true">
        <return-type type="void" />
      </method>
      <method name="ProcessUpdates" cname="gdk_window_process_updates">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="update_children" />
        </parameters>
      </method>
      <method name="Raise" cname="gdk_window_raise">
        <return-type type="void" />
      </method>
      <method name="RegisterDnd" cname="gdk_window_register_dnd">
        <return-type type="void" />
      </method>
      <method name="RemoveFilter" cname="gdk_window_remove_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFilterFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Reparent" cname="gdk_window_reparent">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="new_parent" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="Resize" cname="gdk_window_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Restack" cname="gdk_window_restack">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="sibling" />
          <parameter type="gboolean" name="above" />
        </parameters>
      </method>
      <method name="Scroll" cname="gdk_window_scroll">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="dx" />
          <parameter type="gint" name="dy" />
        </parameters>
      </method>
      <method name="SetAcceptFocus" cname="gdk_window_set_accept_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="accept_focus" />
        </parameters>
      </method>
      <method name="SetBackground" cname="gdk_window_set_background" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetBackgroundPattern" cname="gdk_window_set_background_pattern" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_pattern_t*" name="pattern" />
        </parameters>
      </method>
      <method name="SetBackgroundRgba" cname="gdk_window_set_background_rgba" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkRGBA*" name="rgba" />
        </parameters>
      </method>
      <method name="SetChildInputShapes" cname="gdk_window_set_child_input_shapes">
        <return-type type="void" />
      </method>
      <method name="SetChildShapes" cname="gdk_window_set_child_shapes">
        <return-type type="void" />
      </method>
      <method name="SetComposited" cname="gdk_window_set_composited" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="composited" />
        </parameters>
      </method>
      <method name="SetCursor" cname="gdk_window_set_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkCursor*" name="cursor" />
        </parameters>
      </method>
      <method name="SetDebugUpdates" cname="gdk_window_set_debug_updates" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetDecorations" cname="gdk_window_set_decorations">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWMDecoration" name="decorations" />
        </parameters>
      </method>
      <method name="SetDeviceCursor" cname="gdk_window_set_device_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
          <parameter type="GdkCursor*" name="cursor" />
        </parameters>
      </method>
      <method name="SetDeviceEvents" cname="gdk_window_set_device_events">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDevice*" name="device" />
          <parameter type="GdkEventMask" name="event_mask" />
        </parameters>
      </method>
      <method name="SetEventCompression" cname="gdk_window_set_event_compression">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="event_compression" />
        </parameters>
      </method>
      <method name="SetEvents" cname="gdk_window_set_events">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEventMask" name="event_mask" />
        </parameters>
      </method>
      <method name="SetFocusOnMap" cname="gdk_window_set_focus_on_map">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="focus_on_map" />
        </parameters>
      </method>
      <method name="SetFullscreenMode" cname="gdk_window_set_fullscreen_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFullscreenMode" name="mode" />
        </parameters>
      </method>
      <method name="SetFunctions" cname="gdk_window_set_functions">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWMFunction" name="functions" />
        </parameters>
      </method>
      <method name="SetGeometryHints" cname="gdk_window_set_geometry_hints">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkGeometry*" name="geometry" />
          <parameter type="GdkWindowHints" name="geom_mask" />
        </parameters>
      </method>
      <method name="SetGroup" cname="gdk_window_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="leader" />
        </parameters>
      </method>
      <method name="SetIconList" cname="gdk_window_set_icon_list">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="pixbufs" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gdk_window_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetInvalidateHandler" cname="gdk_window_set_invalidate_handler">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowInvalidateHandlerFunc" name="handler" />
        </parameters>
      </method>
      <method name="SetKeepAbove" cname="gdk_window_set_keep_above">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetKeepBelow" cname="gdk_window_set_keep_below">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetModalHint" cname="gdk_window_set_modal_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="modal" />
        </parameters>
      </method>
      <method name="SetOpacity" cname="gdk_window_set_opacity">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="opacity" />
        </parameters>
      </method>
      <method name="SetOpaqueRegion" cname="gdk_window_set_opaque_region">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_region_t*" name="region" />
        </parameters>
      </method>
      <method name="SetOverrideRedirect" cname="gdk_window_set_override_redirect">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="override_redirect" />
        </parameters>
      </method>
      <method name="SetPassThrough" cname="gdk_window_set_pass_through">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="pass_through" />
        </parameters>
      </method>
      <method name="SetRole" cname="gdk_window_set_role">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="role" />
        </parameters>
      </method>
      <method name="SetShadowWidth" cname="gdk_window_set_shadow_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="left" />
          <parameter type="gint" name="right" />
          <parameter type="gint" name="top" />
          <parameter type="gint" name="bottom" />
        </parameters>
      </method>
      <method name="SetSkipPagerHint" cname="gdk_window_set_skip_pager_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="skips_pager" />
        </parameters>
      </method>
      <method name="SetSkipTaskbarHint" cname="gdk_window_set_skip_taskbar_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="skips_taskbar" />
        </parameters>
      </method>
      <method name="SetSourceEvents" cname="gdk_window_set_source_events">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkInputSource" name="source" />
          <parameter type="GdkEventMask" name="event_mask" />
        </parameters>
      </method>
      <method name="SetStartupId" cname="gdk_window_set_startup_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="startup_id" />
        </parameters>
      </method>
      <method name="SetStaticGravities" cname="gdk_window_set_static_gravities" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="use_static" />
        </parameters>
      </method>
      <method name="SetSupportMultidevice" cname="gdk_window_set_support_multidevice">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="support_multidevice" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gdk_window_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetTransientFor" cname="gdk_window_set_transient_for">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="parent" />
        </parameters>
      </method>
      <method name="SetTypeHint" cname="gdk_window_set_type_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowTypeHint" name="hint" />
        </parameters>
      </method>
      <method name="SetUrgencyHint" cname="gdk_window_set_urgency_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="urgent" />
        </parameters>
      </method>
      <method name="SetUserData" cname="gdk_window_set_user_data">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="ShapeCombineRegion" cname="gdk_window_shape_combine_region">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_region_t*" name="shape_region" />
          <parameter type="gint" name="offset_x" />
          <parameter type="gint" name="offset_y" />
        </parameters>
      </method>
      <method name="Show" cname="gdk_window_show">
        <return-type type="void" />
      </method>
      <method name="ShowUnraised" cname="gdk_window_show_unraised">
        <return-type type="void" />
      </method>
      <method name="ShowWindowMenu" cname="gdk_window_show_window_menu">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Stick" cname="gdk_window_stick">
        <return-type type="void" />
      </method>
      <method name="ThawToplevelUpdatesLibgtkOnly" cname="gdk_window_thaw_toplevel_updates_libgtk_only" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ThawUpdates" cname="gdk_window_thaw_updates">
        <return-type type="void" />
      </method>
      <method name="Unfullscreen" cname="gdk_window_unfullscreen">
        <return-type type="void" />
      </method>
      <method name="Unmaximize" cname="gdk_window_unmaximize">
        <return-type type="void" />
      </method>
      <method name="Unstick" cname="gdk_window_unstick">
        <return-type type="void" />
      </method>
      <method name="Withdraw" cname="gdk_window_withdraw">
        <return-type type="void" />
      </method>
    </object>
    <struct name="ArgContext" cname="GdkArgContext" opaque="true" />
    <struct name="ArgDesc" cname="GdkArgDesc" opaque="true" />
    <struct name="AxisInfo" cname="GdkAxisInfo" opaque="true" />
    <struct name="Backend" cname="GdkBackend" opaque="true" />
    <struct name="ClientFilter" cname="GdkClientFilter" opaque="true" />
    <boxed name="Color" cname="GdkColor">
      <field name="Pixel" cname="pixel" type="guint32" />
      <field name="Red" cname="red" type="guint16" />
      <field name="Green" cname="green" type="guint16" />
      <field name="Blue" cname="blue" type="guint16" />
      <method name="Copy" cname="gdk_color_copy" deprecated="1">
        <return-type type="GdkColor*" owned="true" />
      </method>
      <method name="Equal" cname="gdk_color_equal" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkColor*" name="colorb" />
        </parameters>
      </method>
      <method name="Free" cname="gdk_color_free" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gdk_color_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Hash" cname="gdk_color_hash" deprecated="1">
        <return-type type="guint" />
      </method>
      <method name="Parse" cname="gdk_color_parse" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="spec" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ToString" cname="gdk_color_to_string" deprecated="1">
        <return-type type="gchar*" />
      </method>
    </boxed>
    <struct name="ColorInfo" cname="GdkColorInfo" opaque="true" />
    <struct name="DeviceKey" cname="GdkDeviceKey" opaque="true" />
    <struct name="EventAny" cname="GdkEventAny">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
    </struct>
    <struct name="EventButton" cname="GdkEventButton">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="State" cname="state" type="guint" />
      <field name="Button" cname="button" type="guint" />
      <field name="Device" cname="device" type="GdkDevice*" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
    </struct>
    <struct name="EventConfigure" cname="GdkEventConfigure">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
    </struct>
    <struct name="EventCrossing" cname="GdkEventCrossing">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Subwindow" cname="subwindow" type="GdkWindow*" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
      <field name="Mode" cname="mode" type="GdkCrossingMode" />
      <field name="Detail" cname="detail" type="GdkNotifyType" />
      <field name="Focus" cname="focus" type="gboolean" />
      <field name="State" cname="state" type="guint" />
    </struct>
    <struct name="EventDND" cname="GdkEventDND">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Context" cname="context" type="GdkDragContext*" />
      <field name="Time" cname="time" type="guint32" />
      <field name="XRoot" cname="x_root" type="gshort" />
      <field name="YRoot" cname="y_root" type="gshort" />
    </struct>
    <struct name="EventExpose" cname="GdkEventExpose">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Area" cname="area" type="GdkRectangle" />
      <field name="Region" cname="region" type="cairo_region_t*" />
      <field name="Count" cname="count" type="gint" />
    </struct>
    <struct name="EventFilter" cname="GdkEventFilter" opaque="true" />
    <struct name="EventFocus" cname="GdkEventFocus">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="In" cname="in" type="gint16" />
    </struct>
    <struct name="EventGrabBroken" cname="GdkEventGrabBroken">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Keyboard" cname="keyboard" type="gboolean" />
      <field name="Implicit" cname="implicit" type="gboolean" />
      <field name="GrabWindow" cname="grab_window" type="GdkWindow*" />
    </struct>
    <struct name="EventKey" cname="GdkEventKey">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="State" cname="state" type="guint" />
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="Length" cname="length" type="gint" />
      <field name="String" cname="string" type="gchar*" />
      <field name="HardwareKeycode" cname="hardware_keycode" type="guint16" />
      <field name="Group" cname="group" type="guint8" />
      <field name="IsModifier" cname="is_modifier" bits="1" type="guint" />
    </struct>
    <struct name="EventMotion" cname="GdkEventMotion">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="State" cname="state" type="guint" />
      <field name="IsHint" cname="is_hint" type="gint16" />
      <field name="Device" cname="device" type="GdkDevice*" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
    </struct>
    <struct name="EventOwnerChange" cname="GdkEventOwnerChange">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Owner" cname="owner" type="GdkWindow*" />
      <field name="Reason" cname="reason" type="GdkOwnerChange" />
      <field name="Selection" cname="selection" type="GdkAtom" />
      <field name="Time" cname="time" type="guint32" />
      <field name="SelectionTime" cname="selection_time" type="guint32" />
    </struct>
    <struct name="EventPadAxis" cname="GdkEventPadAxis">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Group" cname="group" type="guint" />
      <field name="Index" cname="index" type="guint" />
      <field name="Mode" cname="mode" type="guint" />
      <field name="Value" cname="value" type="gdouble" />
    </struct>
    <struct name="EventPadButton" cname="GdkEventPadButton">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Group" cname="group" type="guint" />
      <field name="Button" cname="button" type="guint" />
      <field name="Mode" cname="mode" type="guint" />
    </struct>
    <struct name="EventPadGroupMode" cname="GdkEventPadGroupMode">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Group" cname="group" type="guint" />
      <field name="Mode" cname="mode" type="guint" />
    </struct>
    <struct name="EventProperty" cname="GdkEventProperty">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Atom" cname="atom" type="GdkAtom" />
      <field name="Time" cname="time" type="guint32" />
      <field name="State" cname="state" type="guint" />
    </struct>
    <struct name="EventProximity" cname="GdkEventProximity">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Device" cname="device" type="GdkDevice*" />
    </struct>
    <struct name="EventScroll" cname="GdkEventScroll">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="State" cname="state" type="guint" />
      <field name="Direction" cname="direction" type="GdkScrollDirection" />
      <field name="Device" cname="device" type="GdkDevice*" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
      <field name="DeltaX" cname="delta_x" type="gdouble" />
      <field name="DeltaY" cname="delta_y" type="gdouble" />
      <field name="IsStop" cname="is_stop" bits="1" type="guint" />
    </struct>
    <struct name="EventSelection" cname="GdkEventSelection">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Selection" cname="selection" type="GdkAtom" />
      <field name="Target" cname="target" type="GdkAtom" />
      <field name="Property" cname="property" type="GdkAtom" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Requestor" cname="requestor" type="GdkWindow*" />
    </struct>
    <boxed name="EventSequence" cname="GdkEventSequence" opaque="true">
      <method name="GetType" cname="gdk_event_sequence_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="EventSetting" cname="GdkEventSetting">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Action" cname="action" type="GdkSettingAction" />
      <field name="Name" cname="name" type="char*" />
    </struct>
    <struct name="EventTouch" cname="GdkEventTouch">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="State" cname="state" type="guint" />
      <field name="Sequence" cname="sequence" type="GdkEventSequence*" />
      <field name="EmulatingPointer" cname="emulating_pointer" type="gboolean" />
      <field name="Device" cname="device" type="GdkDevice*" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
    </struct>
    <struct name="EventTouchpadPinch" cname="GdkEventTouchpadPinch">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Phase" cname="phase" type="gint8" />
      <field name="NFingers" cname="n_fingers" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="Dx" cname="dx" type="gdouble" />
      <field name="Dy" cname="dy" type="gdouble" />
      <field name="AngleDelta" cname="angle_delta" type="gdouble" />
      <field name="Scale" cname="scale" type="gdouble" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
      <field name="State" cname="state" type="guint" />
    </struct>
    <struct name="EventTouchpadSwipe" cname="GdkEventTouchpadSwipe">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Phase" cname="phase" type="gint8" />
      <field name="NFingers" cname="n_fingers" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="Dx" cname="dx" type="gdouble" />
      <field name="Dy" cname="dy" type="gdouble" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
      <field name="State" cname="state" type="guint" />
    </struct>
    <struct name="EventVisibility" cname="GdkEventVisibility">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="State" cname="state" type="GdkVisibilityState" />
    </struct>
    <struct name="EventWindowState" cname="GdkEventWindowState">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="ChangedMask" cname="changed_mask" type="GdkWindowState" />
      <field name="NewWindowState" cname="new_window_state" type="GdkWindowState" />
    </struct>
    <boxed name="FrameTimings" cname="GdkFrameTimings" opaque="true">
      <method name="GetComplete" cname="gdk_frame_timings_get_complete">
        <return-type type="gboolean" />
      </method>
      <method name="GetFrameCounter" cname="gdk_frame_timings_get_frame_counter">
        <return-type type="gint64" />
      </method>
      <method name="GetFrameTime" cname="gdk_frame_timings_get_frame_time">
        <return-type type="gint64" />
      </method>
      <method name="GetPredictedPresentationTime" cname="gdk_frame_timings_get_predicted_presentation_time">
        <return-type type="gint64" />
      </method>
      <method name="GetPresentationTime" cname="gdk_frame_timings_get_presentation_time">
        <return-type type="gint64" />
      </method>
      <method name="GetRefreshInterval" cname="gdk_frame_timings_get_refresh_interval">
        <return-type type="gint64" />
      </method>
      <method name="GetType" cname="gdk_frame_timings_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Ref" cname="gdk_frame_timings_ref">
        <return-type type="GdkFrameTimings*" />
      </method>
      <method name="Unref" cname="gdk_frame_timings_unref">
        <return-type type="void" />
      </method>
    </boxed>
    <struct name="Geometry" cname="GdkGeometry">
      <field name="MinWidth" cname="min_width" type="gint" />
      <field name="MinHeight" cname="min_height" type="gint" />
      <field name="MaxWidth" cname="max_width" type="gint" />
      <field name="MaxHeight" cname="max_height" type="gint" />
      <field name="BaseWidth" cname="base_width" type="gint" />
      <field name="BaseHeight" cname="base_height" type="gint" />
      <field name="WidthInc" cname="width_inc" type="gint" />
      <field name="HeightInc" cname="height_inc" type="gint" />
      <field name="MinAspect" cname="min_aspect" type="gdouble" />
      <field name="MaxAspect" cname="max_aspect" type="gdouble" />
      <field name="WinGravity" cname="win_gravity" type="GdkGravity" />
    </struct>
    <struct name="GlobalErrorTrap" cname="GdkGlobalErrorTrap" opaque="true" />
    <struct name="IOClosure" cname="GdkIOClosure" opaque="true" />
    <struct name="KeymapKey" cname="GdkKeymapKey">
      <field name="Keycode" cname="keycode" type="guint" />
      <field name="Group" cname="group" type="gint" />
      <field name="Level" cname="level" type="gint" />
    </struct>
    <struct name="OffscreenWindow" cname="GdkOffscreenWindow" opaque="true">
      <method name="GetEmbedder" cname="gdk_offscreen_window_get_embedder" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetSurface" cname="gdk_offscreen_window_get_surface" shared="true">
        <return-type type="cairo_surface_t*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="SetEmbedder" cname="gdk_offscreen_window_set_embedder" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkWindow*" name="embedder" />
        </parameters>
      </method>
    </struct>
    <struct name="OffscreenWindowClass" cname="GdkOffscreenWindowClass" opaque="true" />
    <struct name="Point" cname="GdkPoint">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
    </struct>
    <struct name="Predicate" cname="GdkPredicate" opaque="true" />
    <struct name="RGBA" cname="GdkRGBA">
      <field name="Red" cname="red" type="gdouble" />
      <field name="Green" cname="green" type="gdouble" />
      <field name="Blue" cname="blue" type="gdouble" />
      <field name="Alpha" cname="alpha" type="gdouble" />
      <method name="Copy" cname="gdk_rgba_copy">
        <return-type type="GdkRGBA*" owned="true" />
      </method>
      <method name="Equal" cname="gdk_rgba_equal" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gconstpointer" name="p1" />
          <parameter type="gconstpointer" name="p2" />
        </parameters>
      </method>
      <method name="Free" cname="gdk_rgba_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gdk_rgba_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Hash" cname="gdk_rgba_hash" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gconstpointer" name="p" />
        </parameters>
      </method>
      <method name="Parse" cname="gdk_rgba_parse">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="spec" />
        </parameters>
      </method>
      <method name="ToString" cname="gdk_rgba_to_string">
        <return-type type="gchar*" />
      </method>
    </struct>
    <alias name="Rectangle" cname="GdkRectangle" type="cairo_rectangle_int_t" />
    <struct name="ThreadsDispatch" cname="GdkThreadsDispatch" opaque="true" />
    <struct name="TimeCoord" cname="GdkTimeCoord">
      <field name="Time" cname="time" type="guint32" />
      <field name="Axes" cname="axes" array_len="GDK_MAX_TIMECOORD_AXES" type="gdouble" />
    </struct>
    <struct name="WindowAttr" cname="GdkWindowAttr">
      <field name="Title" cname="title" type="gchar*" />
      <field name="EventMask" cname="event_mask" type="gint" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="Wclass" cname="wclass" type="GdkWindowWindowClass" />
      <field name="Visual" cname="visual" type="GdkVisual*" />
      <field name="WindowType" cname="window_type" type="GdkWindowType" />
      <field name="Cursor" cname="cursor" type="GdkCursor*" />
      <field name="WmclassName" cname="wmclass_name" type="gchar*" />
      <field name="WmclassClass" cname="wmclass_class" type="gchar*" />
      <field name="OverrideRedirect" cname="override_redirect" type="gboolean" />
      <field name="TypeHint" cname="type_hint" type="GdkWindowTypeHint" />
    </struct>
    <struct name="WindowPaint" cname="GdkWindowPaint" opaque="true" />
    <struct name="WindowRedirect" cname="GdkWindowRedirect" opaque="true" />
    <alias name="XEvent" cname="GdkXEvent" type="void" />
    <struct name="Atom" cname="GdkAtom" opaque="true">
      <method name="Intern" cname="gdk_atom_intern" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="atom_name" />
          <parameter type="gboolean" name="only_if_exists" />
        </parameters>
      </method>
      <method name="InternStaticString" cname="gdk_atom_intern_static_string" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="atom_name" />
        </parameters>
      </method>
      <method name="Name" cname="gdk_atom_name">
        <return-type type="gchar*" />
      </method>
    </struct>
    <class name="Global" cname="GdkGlobal">
      <method name="AddOptionEntriesLibgtkOnly" cname="gdk_add_option_entries_libgtk_only" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GOptionGroup*" name="group" />
        </parameters>
      </method>
      <method name="DisableMultidevice" cname="gdk_disable_multidevice" shared="true">
        <return-type type="void" />
      </method>
      <method name="GetDefaultRootWindow" cname="gdk_get_default_root_window" shared="true">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetDisplayArgName" cname="gdk_get_display_arg_name" shared="true">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetProgramClass" cname="gdk_get_program_class" shared="true">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetShowEvents" cname="gdk_get_show_events" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="GlErrorQuark" cname="gdk_gl_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="InitCheck" cname="gdk_init_check" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="argc" />
          <parameter type="gchar***" name="argv" />
        </parameters>
      </method>
      <method name="ListVisuals" cname="gdk_list_visuals" deprecated="1" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="ParseArgs" cname="gdk_parse_args" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="argc" />
          <parameter type="gchar***" name="argv" />
        </parameters>
      </method>
      <method name="PreParseLibgtkOnly" cname="gdk_pre_parse_libgtk_only" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetAllowedBackends" cname="gdk_set_allowed_backends" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="backends" />
        </parameters>
      </method>
      <method name="SetDoubleClickTime" cname="gdk_set_double_click_time" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="msec" />
        </parameters>
      </method>
      <method name="SetProgramClass" cname="gdk_set_program_class" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="program_class" />
        </parameters>
      </method>
      <method name="SetShowEvents" cname="gdk_set_show_events" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_events" />
        </parameters>
      </method>
      <method name="SettingGet" cname="gdk_setting_get" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="TextPropertyToUtf8ListForDisplay" cname="gdk_text_property_to_utf8_list_for_display" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkAtom" name="encoding" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gchar***" name="list" />
        </parameters>
      </method>
      <method name="UnicodeToKeyval" cname="gdk_unicode_to_keyval" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint32" name="wc" />
        </parameters>
      </method>
    </class>
    <class name="Cairo" cname="GdkCairo_">
      <method name="Create" cname="gdk_cairo_create" deprecated="1" shared="true">
        <return-type type="cairo_t*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="DrawFromGl" cname="gdk_cairo_draw_from_gl" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="int" name="source" />
          <parameter type="int" name="source_type" />
          <parameter type="int" name="buffer_scale" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="GetClipRectangle" cname="gdk_cairo_get_clip_rectangle" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetDrawingContext" cname="gdk_cairo_get_drawing_context" shared="true">
        <return-type type="GdkDrawingContext*" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
        </parameters>
      </method>
      <method name="Rectangle" cname="gdk_cairo_rectangle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="const-GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="Region" cname="gdk_cairo_region" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="const-cairo_region_t*" name="region" />
        </parameters>
      </method>
      <method name="RegionCreateFromSurface" cname="gdk_cairo_region_create_from_surface" shared="true">
        <return-type type="cairo_region_t*" />
        <parameters>
          <parameter type="cairo_surface_t*" name="surface" />
        </parameters>
      </method>
      <method name="SetSourceColor" cname="gdk_cairo_set_source_color" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetSourcePixbuf" cname="gdk_cairo_set_source_pixbuf" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="const-GdkPixbuf*" name="pixbuf" />
          <parameter type="gdouble" name="pixbuf_x" />
          <parameter type="gdouble" name="pixbuf_y" />
        </parameters>
      </method>
      <method name="SetSourceRgba" cname="gdk_cairo_set_source_rgba" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="const-GdkRGBA*" name="rgba" />
        </parameters>
      </method>
      <method name="SetSourceWindow" cname="gdk_cairo_set_source_window" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gdouble" name="x" />
          <parameter type="gdouble" name="y" />
        </parameters>
      </method>
      <method name="SurfaceCreateFromPixbuf" cname="gdk_cairo_surface_create_from_pixbuf" shared="true">
        <return-type type="cairo_surface_t*" />
        <parameters>
          <parameter type="const-GdkPixbuf*" name="pixbuf" />
          <parameter type="int" name="scale" />
          <parameter type="GdkWindow*" name="for_window" />
        </parameters>
      </method>
    </class>
    <class name="Drag" cname="GdkDrag_">
      <method name="Abort" cname="gdk_drag_abort" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Begin" cname="gdk_drag_begin" shared="true">
        <return-type type="GdkDragContext*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GList*" name="targets" />
        </parameters>
      </method>
      <method name="BeginForDevice" cname="gdk_drag_begin_for_device" shared="true">
        <return-type type="GdkDragContext*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkDevice*" name="device" />
          <parameter type="GList*" name="targets" />
        </parameters>
      </method>
      <method name="BeginFromPoint" cname="gdk_drag_begin_from_point" shared="true">
        <return-type type="GdkDragContext*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkDevice*" name="device" />
          <parameter type="GList*" name="targets" />
          <parameter type="gint" name="x_root" />
          <parameter type="gint" name="y_root" />
        </parameters>
      </method>
      <method name="Drop" cname="gdk_drag_drop" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="DropDone" cname="gdk_drag_drop_done" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gboolean" name="success" />
        </parameters>
      </method>
      <method name="DropSucceeded" cname="gdk_drag_drop_succeeded" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="FindWindowForScreen" cname="gdk_drag_find_window_for_screen" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkWindow*" name="drag_window" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="gint" name="x_root" />
          <parameter type="gint" name="y_root" />
          <parameter type="GdkWindow**" name="dest_window" />
          <parameter type="GdkDragProtocol*" name="protocol" />
        </parameters>
      </method>
      <method name="GetSelection" cname="gdk_drag_get_selection" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="Motion" cname="gdk_drag_motion" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkWindow*" name="dest_window" />
          <parameter type="GdkDragProtocol" name="protocol" />
          <parameter type="gint" name="x_root" />
          <parameter type="gint" name="y_root" />
          <parameter type="GdkDragAction" name="suggested_action" />
          <parameter type="GdkDragAction" name="possible_actions" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Status" cname="gdk_drag_status" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkDragAction" name="action" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Drop" cname="GdkDrop_">
      <method name="Finish" cname="gdk_drop_finish" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gboolean" name="success" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Reply" cname="gdk_drop_reply" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gboolean" name="accepted" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Error" cname="GdkError_">
      <method name="TrapPopIgnored" cname="gdk_error_trap_pop_ignored" shared="true">
        <return-type type="void" />
      </method>
      <method name="TrapPush" cname="gdk_error_trap_push" shared="true">
        <return-type type="void" />
      </method>
    </class>
    <class name="Event" cname="GdkEvent_">
      <method name="Copy" cname="gdk_event_copy" shared="true">
        <return-type type="GdkEvent*" owned="true" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Free" cname="gdk_event_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Get" cname="gdk_event_get" shared="true">
        <return-type type="GdkEvent*" />
      </method>
      <method name="GetAxis" cname="gdk_event_get_axis" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="GdkAxisUse" name="axis_use" />
          <parameter type="gdouble*" name="value" />
        </parameters>
      </method>
      <method name="GetButton" cname="gdk_event_get_button" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="guint*" name="button" />
        </parameters>
      </method>
      <method name="GetClickCount" cname="gdk_event_get_click_count" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="guint*" name="click_count" />
        </parameters>
      </method>
      <method name="GetCoords" cname="gdk_event_get_coords" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="gdouble*" name="x_win" />
          <parameter type="gdouble*" name="y_win" />
        </parameters>
      </method>
      <method name="GetDevice" cname="gdk_event_get_device" shared="true">
        <return-type type="GdkDevice*" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetDeviceTool" cname="gdk_event_get_device_tool" shared="true">
        <return-type type="GdkDeviceTool*" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetEventSequence" cname="gdk_event_get_event_sequence" shared="true">
        <return-type type="GdkEventSequence*" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetEventType" cname="gdk_event_get_event_type" shared="true">
        <return-type type="GdkEventType" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetKeycode" cname="gdk_event_get_keycode" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="guint16*" name="keycode" />
        </parameters>
      </method>
      <method name="GetKeyval" cname="gdk_event_get_keyval" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="guint*" name="keyval" />
        </parameters>
      </method>
      <method name="GetPointerEmulated" cname="gdk_event_get_pointer_emulated" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetRootCoords" cname="gdk_event_get_root_coords" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="gdouble*" name="x_root" />
          <parameter type="gdouble*" name="y_root" />
        </parameters>
      </method>
      <method name="GetScancode" cname="gdk_event_get_scancode" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetScreen" cname="gdk_event_get_screen" shared="true">
        <return-type type="GdkScreen*" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetScrollDeltas" cname="gdk_event_get_scroll_deltas" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="gdouble*" name="delta_x" />
          <parameter type="gdouble*" name="delta_y" />
        </parameters>
      </method>
      <method name="GetScrollDirection" cname="gdk_event_get_scroll_direction" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="GdkScrollDirection*" name="direction" />
        </parameters>
      </method>
      <method name="GetSeat" cname="gdk_event_get_seat" shared="true">
        <return-type type="GdkSeat*" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetSourceDevice" cname="gdk_event_get_source_device" shared="true">
        <return-type type="GdkDevice*" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetState" cname="gdk_event_get_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </method>
      <method name="GetTime" cname="gdk_event_get_time" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_event_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWindow" cname="gdk_event_get_window" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="HandlerSet" cname="gdk_event_handler_set" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEventFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="IsScrollStopEvent" cname="gdk_event_is_scroll_stop_event" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="New" cname="gdk_event_new" shared="true">
        <return-type type="GdkEvent*" />
        <parameters>
          <parameter type="GdkEventType" name="type" />
        </parameters>
      </method>
      <method name="Peek" cname="gdk_event_peek" shared="true">
        <return-type type="GdkEvent*" />
      </method>
      <method name="Put" cname="gdk_event_put" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="RequestMotions" cname="gdk_event_request_motions" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkEventMotion*" name="event" />
        </parameters>
      </method>
      <method name="SetDevice" cname="gdk_event_set_device" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </method>
      <method name="SetDeviceTool" cname="gdk_event_set_device_tool" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkDeviceTool*" name="tool" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gdk_event_set_screen" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetSourceDevice" cname="gdk_event_set_source_device" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </method>
      <method name="TriggersContextMenu" cname="gdk_event_triggers_context_menu" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkEvent*" name="event" />
        </parameters>
      </method>
    </class>
    <class name="Events" cname="GdkEvents_">
      <method name="GetAngle" cname="gdk_events_get_angle" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event1" />
          <parameter type="GdkEvent*" name="event2" />
          <parameter type="gdouble*" name="angle" />
        </parameters>
      </method>
      <method name="GetCenter" cname="gdk_events_get_center" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event1" />
          <parameter type="GdkEvent*" name="event2" />
          <parameter type="gdouble*" name="x" />
          <parameter type="gdouble*" name="y" />
        </parameters>
      </method>
      <method name="GetDistance" cname="gdk_events_get_distance" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event1" />
          <parameter type="GdkEvent*" name="event2" />
          <parameter type="gdouble*" name="distance" />
        </parameters>
      </method>
      <method name="Pending" cname="gdk_events_pending" shared="true">
        <return-type type="gboolean" />
      </method>
    </class>
    <class name="Keyboard" cname="GdkKeyboard_">
      <method name="Grab" cname="gdk_keyboard_grab" deprecated="1" shared="true">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Ungrab" cname="gdk_keyboard_ungrab" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Keyval" cname="GdkKeyval_">
      <method name="ConvertCase" cname="gdk_keyval_convert_case" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="symbol" />
          <parameter type="guint*" name="lower" />
          <parameter type="guint*" name="upper" />
        </parameters>
      </method>
      <method name="FromName" cname="gdk_keyval_from_name" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="keyval_name" />
        </parameters>
      </method>
      <method name="IsLower" cname="gdk_keyval_is_lower" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="IsUpper" cname="gdk_keyval_is_upper" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="Name" cname="gdk_keyval_name" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="ToLower" cname="gdk_keyval_to_lower" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="ToUnicode" cname="gdk_keyval_to_unicode" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="ToUpper" cname="gdk_keyval_to_upper" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
    </class>
    <class name="Notify" cname="GdkNotify_">
      <method name="StartupComplete" cname="gdk_notify_startup_complete" shared="true">
        <return-type type="void" />
      </method>
      <method name="StartupCompleteWithId" cname="gdk_notify_startup_complete_with_id" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="startup_id" />
        </parameters>
      </method>
    </class>
    <class name="Pango" cname="GdkPango_">
      <method name="ContextGet" cname="gdk_pango_context_get" shared="true">
        <return-type type="PangoContext*" />
      </method>
      <method name="ContextGetForDisplay" cname="gdk_pango_context_get_for_display" shared="true">
        <return-type type="PangoContext*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
        </parameters>
      </method>
      <method name="ContextGetForScreen" cname="gdk_pango_context_get_for_screen" shared="true">
        <return-type type="PangoContext*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="LayoutGetClipRegion" cname="gdk_pango_layout_get_clip_region" shared="true">
        <return-type type="cairo_region_t*" />
        <parameters>
          <parameter type="PangoLayout*" name="layout" />
          <parameter type="gint" name="x_origin" />
          <parameter type="gint" name="y_origin" />
          <parameter type="const-gint*" name="index_ranges" />
          <parameter type="gint" name="n_ranges" />
        </parameters>
      </method>
      <method name="LayoutLineGetClipRegion" cname="gdk_pango_layout_line_get_clip_region" shared="true">
        <return-type type="cairo_region_t*" />
        <parameters>
          <parameter type="PangoLayoutLine*" name="line" />
          <parameter type="gint" name="x_origin" />
          <parameter type="gint" name="y_origin" />
          <parameter type="const-gint*" name="index_ranges" />
          <parameter type="gint" name="n_ranges" />
        </parameters>
      </method>
    </class>
    <class name="Pixbuf" cname="GdkPixbuf_">
      <method name="GetFromSurface" cname="gdk_pixbuf_get_from_surface" shared="true">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="cairo_surface_t*" name="surface" />
          <parameter type="gint" name="src_x" />
          <parameter type="gint" name="src_y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="GetFromWindow" cname="gdk_pixbuf_get_from_window" shared="true">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gint" name="src_x" />
          <parameter type="gint" name="src_y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
    </class>
    <class name="Pointer" cname="GdkPointer_">
      <method name="Grab" cname="gdk_pointer_grab" deprecated="1" shared="true">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="GdkEventMask" name="event_mask" />
          <parameter type="GdkWindow*" name="confine_to" />
          <parameter type="GdkCursor*" name="cursor" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="IsGrabbed" cname="gdk_pointer_is_grabbed" deprecated="1" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="Ungrab" cname="gdk_pointer_ungrab" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Property" cname="GdkProperty_">
      <method name="Change" cname="gdk_property_change" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="GdkAtom" name="type" />
          <parameter type="gint" name="format" />
          <parameter type="GdkPropMode" name="mode" />
          <parameter type="const-guchar*" name="data" />
          <parameter type="gint" name="nelements" />
        </parameters>
      </method>
      <method name="Delete" cname="gdk_property_delete" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkAtom" name="property" />
        </parameters>
      </method>
      <method name="Get" cname="gdk_property_get" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="GdkAtom" name="type" />
          <parameter type="gulong" name="offset" />
          <parameter type="gulong" name="length" />
          <parameter type="gint" name="pdelete" />
          <parameter type="GdkAtom*" name="actual_property_type" />
          <parameter type="gint*" name="actual_format" />
          <parameter type="gint*" name="actual_length" />
          <parameter type="guchar**" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Query" cname="GdkQuery_">
      <method name="Depths" cname="gdk_query_depths" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint**" name="depths" />
          <parameter type="gint*" name="count" />
        </parameters>
      </method>
      <method name="VisualTypes" cname="gdk_query_visual_types" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkVisualType**" name="visual_types" />
          <parameter type="gint*" name="count" />
        </parameters>
      </method>
    </class>
    <class name="Rectangle" cname="GdkRectangle_">
      <method name="Equal" cname="gdk_rectangle_equal" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkRectangle*" name="rect1" />
          <parameter type="const-GdkRectangle*" name="rect2" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_rectangle_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Intersect" cname="gdk_rectangle_intersect" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkRectangle*" name="src1" />
          <parameter type="const-GdkRectangle*" name="src2" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </method>
      <method name="Union" cname="gdk_rectangle_union" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkRectangle*" name="src1" />
          <parameter type="const-GdkRectangle*" name="src2" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </method>
    </class>
    <class name="Selection" cname="GdkSelection_">
      <method name="Convert" cname="gdk_selection_convert" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="OwnerGet" cname="gdk_selection_owner_get" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="OwnerGetForDisplay" cname="gdk_selection_owner_get_for_display" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="OwnerSet" cname="gdk_selection_owner_set" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="owner" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
          <parameter type="gboolean" name="send_event" />
        </parameters>
      </method>
      <method name="OwnerSetForDisplay" cname="gdk_selection_owner_set_for_display" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkWindow*" name="owner" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
          <parameter type="gboolean" name="send_event" />
        </parameters>
      </method>
      <method name="PropertyGet" cname="gdk_selection_property_get" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="guchar**" name="data" />
          <parameter type="GdkAtom*" name="prop_type" />
          <parameter type="gint*" name="prop_format" />
        </parameters>
      </method>
      <method name="SendNotify" cname="gdk_selection_send_notify" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="SendNotifyForDisplay" cname="gdk_selection_send_notify_for_display" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Threads" cname="GdkThreads_">
      <method name="AddIdle" cname="gdk_threads_add_idle" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GSourceFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddIdleFull" cname="gdk_threads_add_idle_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="GSourceFunc" name="function" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="AddTimeout" cname="gdk_threads_add_timeout" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddTimeoutFull" cname="gdk_threads_add_timeout_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="function" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="AddTimeoutSeconds" cname="gdk_threads_add_timeout_seconds" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddTimeoutSecondsFull" cname="gdk_threads_add_timeout_seconds_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="guint" name="interval" />
          <parameter type="GSourceFunc" name="function" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="Enter" cname="gdk_threads_enter" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="Init" cname="gdk_threads_init" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="Leave" cname="gdk_threads_leave" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetLockFunctions" cname="gdk_threads_set_lock_functions" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GCallback" name="enter_fn" />
          <parameter type="GCallback" name="leave_fn" />
        </parameters>
      </method>
    </class>
  </namespace>
  <namespace name="Gdk" library="Library.GdkPixbuf">
    <enum name="Colorspace" cname="GdkColorspace" gtype="gdk_colorspace_get_type" type="enum">
      <member cname="GDK_COLORSPACE_RGB" name="Rgb" />
    </enum>
    <enum name="InterpType" cname="GdkInterpType" gtype="gdk_interp_type_get_type" type="enum">
      <member cname="GDK_INTERP_NEAREST" name="Nearest" />
      <member cname="GDK_INTERP_TILES" name="Tiles" />
      <member cname="GDK_INTERP_BILINEAR" name="Bilinear" />
      <member cname="GDK_INTERP_HYPER" name="Hyper" />
    </enum>
    <enum name="PixbufAlphaMode" cname="GdkPixbufAlphaMode" gtype="gdk_pixbuf_alpha_mode_get_type" type="enum">
      <member cname="GDK_PIXBUF_ALPHA_BILEVEL" name="Bilevel" />
      <member cname="GDK_PIXBUF_ALPHA_FULL" name="Full" />
    </enum>
    <enum name="PixbufError" cname="GdkPixbufError" gtype="gdk_pixbuf_error_get_type" type="enum">
      <member cname="GDK_PIXBUF_ERROR_CORRUPT_IMAGE" name="CorruptImage" />
      <member cname="GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY" name="InsufficientMemory" />
      <member cname="GDK_PIXBUF_ERROR_BAD_OPTION" name="BadOption" />
      <member cname="GDK_PIXBUF_ERROR_UNKNOWN_TYPE" name="UnknownType" />
      <member cname="GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION" name="UnsupportedOperation" />
      <member cname="GDK_PIXBUF_ERROR_FAILED" name="Failed" />
      <member cname="GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION" name="IncompleteAnimation" />
    </enum>
    <enum name="PixbufFrameAction" cname="GdkPixbufFrameAction" type="enum">
      <member cname="GDK_PIXBUF_FRAME_RETAIN" name="Retain" />
      <member cname="GDK_PIXBUF_FRAME_DISPOSE" name="Dispose" />
      <member cname="GDK_PIXBUF_FRAME_REVERT" name="Revert" />
    </enum>
    <enum name="PixbufRotation" cname="GdkPixbufRotation" gtype="gdk_pixbuf_rotation_get_type" type="enum">
      <member cname="GDK_PIXBUF_ROTATE_NONE" name="None" />
      <member cname="GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE" name="Counterclockwise" value="90" />
      <member cname="GDK_PIXBUF_ROTATE_UPSIDEDOWN" name="Upsidedown" value="180" />
      <member cname="GDK_PIXBUF_ROTATE_CLOCKWISE" name="Clockwise" value="270" />
    </enum>
    <enum name="PixdataDumpType" cname="GdkPixdataDumpType" deprecated="1" type="flags">
      <member cname="GDK_PIXDATA_DUMP_PIXDATA_STREAM" name="PixdataStream" />
      <member cname="GDK_PIXDATA_DUMP_PIXDATA_STRUCT" name="PixdataStruct" value="1" />
      <member cname="GDK_PIXDATA_DUMP_MACROS" name="Macros" value="2" />
      <member cname="GDK_PIXDATA_DUMP_GTYPES" name="Gtypes" />
      <member cname="GDK_PIXDATA_DUMP_CTYPES" name="Ctypes" value="1 &lt;&lt; 8" />
      <member cname="GDK_PIXDATA_DUMP_STATIC" name="Static" value="1 &lt;&lt; 9" />
      <member cname="GDK_PIXDATA_DUMP_CONST" name="Const" value="1 &lt;&lt; 10" />
      <member cname="GDK_PIXDATA_DUMP_RLE_DECODER" name="RleDecoder" value="1 &lt;&lt; 16" />
    </enum>
    <enum name="PixdataType" cname="GdkPixdataType" deprecated="1" type="flags">
      <member cname="GDK_PIXDATA_COLOR_TYPE_RGB" name="ColorTypeRgb" value="0x01" />
      <member cname="GDK_PIXDATA_COLOR_TYPE_RGBA" name="ColorTypeRgba" value="0x02" />
      <member cname="GDK_PIXDATA_COLOR_TYPE_MASK" name="ColorTypeMask" value="0xff" />
      <member cname="GDK_PIXDATA_SAMPLE_WIDTH_8" name="SampleWidth8" value="0x01 &lt;&lt; 16" />
      <member cname="GDK_PIXDATA_SAMPLE_WIDTH_MASK" name="SampleWidthMask" value="0x0f &lt;&lt; 16" />
      <member cname="GDK_PIXDATA_ENCODING_RAW" name="EncodingRaw" value="0x01 &lt;&lt; 24" />
      <member cname="GDK_PIXDATA_ENCODING_RLE" name="EncodingRle" value="0x02 &lt;&lt; 24" />
      <member cname="GDK_PIXDATA_ENCODING_MASK" name="EncodingMask" value="0x0f &lt;&lt; 24" />
    </enum>
    <callback name="PixbufDestroyNotify" cname="GdkPixbufDestroyNotify">
      <return-type type="void" />
      <parameters>
        <parameter type="guchar*" name="pixels" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="PixbufSaveFunc" cname="GdkPixbufSaveFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-gchar*" name="buf" />
        <parameter type="gsize" name="count" />
        <parameter type="GError**" name="error" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <object name="Pixbuf" cname="GdkPixbuf" parent="GObject">
      <class_struct cname="GdkPixbufClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
      </class_struct>
      <property name="NChannels" cname="n-channels" type="gint" />
      <property name="Colorspace" cname="colorspace" type="GdkColorspace" />
      <property name="HasAlpha" cname="has-alpha" type="gboolean" />
      <property name="BitsPerSample" cname="bits-per-sample" type="gint" />
      <property name="Width" cname="width" type="gint" />
      <property name="Height" cname="height" type="gint" />
      <property name="Rowstride" cname="rowstride" type="gint" />
      <property name="Pixels" cname="pixels" type="gpointer" />
      <property name="PixelBytes" cname="pixel-bytes" type="GBytes" />
      <implements>
        <interface cname="GIcon" />
        <interface cname="GLoadableIcon" />
      </implements>
      <method name="AddAlpha" cname="gdk_pixbuf_add_alpha">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="gboolean" name="substitute_color" />
          <parameter type="guchar" name="r" />
          <parameter type="guchar" name="g" />
          <parameter type="guchar" name="b" />
        </parameters>
      </method>
      <method name="ApplyEmbeddedOrientation" cname="gdk_pixbuf_apply_embedded_orientation">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="Composite" cname="gdk_pixbuf_composite">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="double" name="offset_x" />
          <parameter type="double" name="offset_y" />
          <parameter type="double" name="scale_x" />
          <parameter type="double" name="scale_y" />
          <parameter type="GdkInterpType" name="interp_type" />
          <parameter type="int" name="overall_alpha" />
        </parameters>
      </method>
      <method name="CompositeColor" cname="gdk_pixbuf_composite_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="double" name="offset_x" />
          <parameter type="double" name="offset_y" />
          <parameter type="double" name="scale_x" />
          <parameter type="double" name="scale_y" />
          <parameter type="GdkInterpType" name="interp_type" />
          <parameter type="int" name="overall_alpha" />
          <parameter type="int" name="check_x" />
          <parameter type="int" name="check_y" />
          <parameter type="int" name="check_size" />
          <parameter type="guint32" name="color1" />
          <parameter type="guint32" name="color2" />
        </parameters>
      </method>
      <method name="CompositeColorSimple" cname="gdk_pixbuf_composite_color_simple">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="GdkInterpType" name="interp_type" />
          <parameter type="int" name="overall_alpha" />
          <parameter type="int" name="check_size" />
          <parameter type="guint32" name="color1" />
          <parameter type="guint32" name="color2" />
        </parameters>
      </method>
      <method name="Copy" cname="gdk_pixbuf_copy">
        <return-type type="GdkPixbuf*" owned="true" />
      </method>
      <method name="CopyArea" cname="gdk_pixbuf_copy_area">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="GdkPixbuf*" name="dest_pixbuf" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
        </parameters>
      </method>
      <method name="CopyOptions" cname="gdk_pixbuf_copy_options">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest_pixbuf" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gdk_pixbuf_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Fill" cname="gdk_pixbuf_fill">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="pixel" />
        </parameters>
      </method>
      <method name="Flip" cname="gdk_pixbuf_flip">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="gboolean" name="horizontal" />
        </parameters>
      </method>
      <method name="GetBitsPerSample" cname="gdk_pixbuf_get_bits_per_sample">
        <return-type type="int" />
      </method>
      <method name="GetByteLength" cname="gdk_pixbuf_get_byte_length">
        <return-type type="gsize" />
      </method>
      <method name="GetColorspace" cname="gdk_pixbuf_get_colorspace">
        <return-type type="GdkColorspace" />
      </method>
      <method name="GetFileInfo" cname="gdk_pixbuf_get_file_info" shared="true">
        <return-type type="GdkPixbufFormat*" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetFileInfoAsync" cname="gdk_pixbuf_get_file_info_async" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GAsyncReadyCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="GetFileInfoFinish" cname="gdk_pixbuf_get_file_info_finish" shared="true">
        <return-type type="GdkPixbufFormat*" />
        <parameters>
          <parameter type="GAsyncResult*" name="async_result" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetFormats" cname="gdk_pixbuf_get_formats" shared="true">
        <return-type type="GSList*" />
      </method>
      <method name="GetHasAlpha" cname="gdk_pixbuf_get_has_alpha">
        <return-type type="gboolean" />
      </method>
      <method name="GetHeight" cname="gdk_pixbuf_get_height">
        <return-type type="int" />
      </method>
      <method name="GetNChannels" cname="gdk_pixbuf_get_n_channels">
        <return-type type="int" />
      </method>
      <method name="GetOption" cname="gdk_pixbuf_get_option">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetOptions" cname="gdk_pixbuf_get_options">
        <return-type type="GHashTable*" />
      </method>
      <method name="GetPixels" cname="gdk_pixbuf_get_pixels">
        <return-type type="guchar*" />
      </method>
      <method name="GetPixelsWithLength" cname="gdk_pixbuf_get_pixels_with_length">
        <return-type type="guchar*" />
        <parameters>
          <parameter type="guint*" name="length" />
        </parameters>
      </method>
      <method name="GetRowstride" cname="gdk_pixbuf_get_rowstride">
        <return-type type="int" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gdk_pixbuf_get_width">
        <return-type type="int" />
      </method>
      <constructor cname="gdk_pixbuf_new">
        <parameters>
          <parameter type="GdkColorspace" name="colorspace" />
          <parameter type="gboolean" name="has_alpha" />
          <parameter type="int" name="bits_per_sample" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_bytes">
        <parameters>
          <parameter type="GBytes*" name="data" />
          <parameter type="GdkColorspace" name="colorspace" />
          <parameter type="gboolean" name="has_alpha" />
          <parameter type="int" name="bits_per_sample" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="int" name="rowstride" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_data">
        <parameters>
          <parameter type="const-guchar*" name="data" />
          <parameter type="GdkColorspace" name="colorspace" />
          <parameter type="gboolean" name="has_alpha" />
          <parameter type="int" name="bits_per_sample" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="int" name="rowstride" />
          <parameter type="GdkPixbufDestroyNotify" name="destroy_fn" />
          <parameter type="gpointer" name="destroy_fn_data" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file_at_scale">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="gboolean" name="preserve_aspect_ratio" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file_at_scale_utf8">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="gboolean" name="preserve_aspect_ratio" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file_at_size">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file_at_size_utf8">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file_utf8">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_resource">
        <parameters>
          <parameter type="const-char*" name="resource_path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_resource_at_scale">
        <parameters>
          <parameter type="const-char*" name="resource_path" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="gboolean" name="preserve_aspect_ratio" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_stream">
        <parameters>
          <parameter type="GInputStream*" name="stream" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_stream_async">
        <parameters>
          <parameter type="GInputStream*" name="stream" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GAsyncReadyCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_stream_at_scale">
        <parameters>
          <parameter type="GInputStream*" name="stream" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gboolean" name="preserve_aspect_ratio" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_stream_at_scale_async">
        <parameters>
          <parameter type="GInputStream*" name="stream" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gboolean" name="preserve_aspect_ratio" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GAsyncReadyCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_stream_finish">
        <parameters>
          <parameter type="GAsyncResult*" name="async_result" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_xpm_data">
        <parameters>
          <parameter type="const-char**" name="data" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_subpixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="src_pixbuf" />
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </constructor>
      <method name="ReadPixelBytes" cname="gdk_pixbuf_read_pixel_bytes">
        <return-type type="GBytes*" />
      </method>
      <method name="ReadPixels" cname="gdk_pixbuf_read_pixels">
        <return-type type="const-guint8*" />
      </method>
      <method name="RemoveOption" cname="gdk_pixbuf_remove_option">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="RotateSimple" cname="gdk_pixbuf_rotate_simple">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GdkPixbufRotation" name="angle" />
        </parameters>
      </method>
      <method name="SaturateAndPixelate" cname="gdk_pixbuf_saturate_and_pixelate">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="gfloat" name="saturation" />
          <parameter type="gboolean" name="pixelate" />
        </parameters>
      </method>
      <method name="Save" cname="gdk_pixbuf_save">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="const-char*" name="type" />
          <parameter type="GError**" name="error" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToBuffer" cname="gdk_pixbuf_save_to_buffer">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gchar**" name="buffer" />
          <parameter type="gsize*" name="buffer_size" />
          <parameter type="const-char*" name="type" />
          <parameter type="GError**" name="error" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToBufferv" cname="gdk_pixbuf_save_to_bufferv">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gchar**" name="buffer" />
          <parameter type="gsize*" name="buffer_size" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SaveToCallback" cname="gdk_pixbuf_save_to_callback">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbufSaveFunc" name="save_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-char*" name="type" />
          <parameter type="GError**" name="error" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToCallbackv" cname="gdk_pixbuf_save_to_callbackv">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbufSaveFunc" name="save_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SaveToStream" cname="gdk_pixbuf_save_to_stream">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GOutputStream*" name="stream" />
          <parameter type="const-char*" name="type" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GError**" name="error" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToStreamAsync" cname="gdk_pixbuf_save_to_stream_async">
        <return-type type="void" />
        <parameters>
          <parameter type="GOutputStream*" name="stream" />
          <parameter type="const-gchar*" name="type" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GAsyncReadyCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToStreamFinish" cname="gdk_pixbuf_save_to_stream_finish" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GAsyncResult*" name="async_result" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SaveToStreamv" cname="gdk_pixbuf_save_to_streamv">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GOutputStream*" name="stream" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SaveToStreamvAsync" cname="gdk_pixbuf_save_to_streamv_async">
        <return-type type="void" />
        <parameters>
          <parameter type="GOutputStream*" name="stream" />
          <parameter type="const-gchar*" name="type" />
          <parameter type="gchar**" name="option_keys" />
          <parameter type="gchar**" name="option_values" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GAsyncReadyCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="Savev" cname="gdk_pixbuf_savev">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SavevUtf8" cname="gdk_pixbuf_savev_utf8">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Scale" cname="gdk_pixbuf_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="double" name="offset_x" />
          <parameter type="double" name="offset_y" />
          <parameter type="double" name="scale_x" />
          <parameter type="double" name="scale_y" />
          <parameter type="GdkInterpType" name="interp_type" />
        </parameters>
      </method>
      <method name="ScaleSimple" cname="gdk_pixbuf_scale_simple">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="GdkInterpType" name="interp_type" />
        </parameters>
      </method>
      <method name="SetOption" cname="gdk_pixbuf_set_option">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="const-gchar*" name="value" />
        </parameters>
      </method>
    </object>
    <object name="PixbufAnimation" cname="GdkPixbufAnimation" parent="GObject">
      <method name="GetHeight" cname="gdk_pixbuf_animation_get_height">
        <return-type type="int" />
      </method>
      <method name="GetIter" cname="gdk_pixbuf_animation_get_iter">
        <return-type type="GdkPixbufAnimationIter*" />
        <parameters>
          <parameter type="const-GTimeVal*" name="start_time" />
        </parameters>
      </method>
      <method name="GetStaticImage" cname="gdk_pixbuf_animation_get_static_image">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_animation_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gdk_pixbuf_animation_get_width">
        <return-type type="int" />
      </method>
      <method name="IsStaticImage" cname="gdk_pixbuf_animation_is_static_image">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gdk_pixbuf_animation_new_from_file">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_animation_new_from_file_utf8">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_animation_new_from_resource">
        <parameters>
          <parameter type="const-char*" name="resource_path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_animation_new_from_stream">
        <parameters>
          <parameter type="GInputStream*" name="stream" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_animation_new_from_stream_async">
        <parameters>
          <parameter type="GInputStream*" name="stream" />
          <parameter type="GCancellable*" name="cancellable" />
          <parameter type="GAsyncReadyCallback" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_animation_new_from_stream_finish">
        <parameters>
          <parameter type="GAsyncResult*" name="async_result" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
    </object>
    <object name="PixbufAnimationIter" cname="GdkPixbufAnimationIter" parent="GObject">
      <method name="Advance" cname="gdk_pixbuf_animation_iter_advance">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GTimeVal*" name="current_time" />
        </parameters>
      </method>
      <method name="GetDelayTime" cname="gdk_pixbuf_animation_iter_get_delay_time">
        <return-type type="int" />
      </method>
      <method name="GetPixbuf" cname="gdk_pixbuf_animation_iter_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_animation_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="OnCurrentlyLoadingFrame" cname="gdk_pixbuf_animation_iter_on_currently_loading_frame">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="PixbufAniAnim" cname="GdkPixbufAniAnim" parent="GdkPixbufAnimation">
      <class_struct cname="GdkPixbufAniAnimClass">
        <field name="ParentClass" cname="parent_class" type="GdkPixbufAnimationClass" />
      </class_struct>
      <field name="TotalTime" cname="total_time" type="int" />
      <field name="NFrames" cname="n_frames" type="int" />
      <field name="NPixbufs" cname="n_pixbufs" type="int" />
      <field name="Pixbufs" cname="pixbufs" type="GdkPixbuf**" />
      <field name="Sequence" cname="sequence" type="int*" />
      <field name="Delay" cname="delay" type="int*" />
      <field name="Width" cname="width" type="int" />
      <field name="Height" cname="height" type="int" />
      <method name="GetType" cname="gdk_pixbuf_ani_anim_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="PixbufAniAnimIter" cname="GdkPixbufAniAnimIter" parent="GdkPixbufAnimationIter">
      <class_struct cname="GdkPixbufAniAnimIterClass">
        <field name="ParentClass" cname="parent_class" type="GdkPixbufAnimationIterClass" />
      </class_struct>
      <field name="AniAnim" cname="ani_anim" type="GdkPixbufAniAnim*" />
      <field name="StartTime" cname="start_time" type="GTimeVal" />
      <field name="CurrentTime" cname="current_time" type="GTimeVal" />
      <field name="Position" cname="position" type="gint" />
      <field name="CurrentFrame" cname="current_frame" type="gint" />
      <field name="Elapsed" cname="elapsed" type="gint" />
      <method name="GetType" cname="gdk_pixbuf_ani_anim_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="PixbufGifAnim" cname="GdkPixbufGifAnim" parent="GdkPixbufAnimation">
      <class_struct cname="GdkPixbufGifAnimClass">
        <field name="ParentClass" cname="parent_class" type="GdkPixbufAnimationClass" />
      </class_struct>
      <field name="NFrames" cname="n_frames" type="int" />
      <field name="TotalTime" cname="total_time" type="int" />
      <field name="Frames" cname="frames" type="GList*" />
      <field name="Width" cname="width" type="int" />
      <field name="Height" cname="height" type="int" />
      <field name="BgRed" cname="bg_red" type="guchar" />
      <field name="BgGreen" cname="bg_green" type="guchar" />
      <field name="BgBlue" cname="bg_blue" type="guchar" />
      <field name="Loop" cname="loop" type="int" />
      <field name="Loading" cname="loading" type="gboolean" />
      <method name="FrameComposite" cname="gdk_pixbuf_gif_anim_frame_composite">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbufFrame*" name="frame" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_pixbuf_gif_anim_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="PixbufGifAnimIter" cname="GdkPixbufGifAnimIter" parent="GdkPixbufAnimationIter">
      <class_struct cname="GdkPixbufGifAnimIterClass">
        <field name="ParentClass" cname="parent_class" type="GdkPixbufAnimationIterClass" />
      </class_struct>
      <field name="GifAnim" cname="gif_anim" type="GdkPixbufGifAnim*" />
      <field name="StartTime" cname="start_time" type="GTimeVal" />
      <field name="CurrentTime" cname="current_time" type="GTimeVal" />
      <field name="Position" cname="position" type="gint" />
      <field name="CurrentFrame" cname="current_frame" type="GList*" />
      <field name="FirstLoopSlowness" cname="first_loop_slowness" type="gint" />
      <method name="GetType" cname="gdk_pixbuf_gif_anim_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="PixbufLoader" cname="GdkPixbufLoader" parent="GObject">
      <class_struct cname="GdkPixbufLoaderClass">
        <field name="ParentClass" cname="parent_class" type="GObjectClass" />
        <method signal_vm="size_prepared" />
        <method signal_vm="area_prepared" />
        <method signal_vm="area_updated" />
        <method signal_vm="closed" />
      </class_struct>
      <field name="Priv" cname="priv" type="gpointer" />
      <signal name="SizePrepared" cname="size-prepared" when="LAST" field_name="size_prepared">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </signal>
      <signal name="AreaPrepared" cname="area-prepared" when="LAST" field_name="area_prepared">
        <return-type type="void" />
        <parameters />
      </signal>
      <signal name="AreaUpdated" cname="area-updated" when="LAST" field_name="area_updated">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </signal>
      <signal name="Closed" cname="closed" when="LAST" field_name="closed">
        <return-type type="void" />
        <parameters />
      </signal>
      <method name="Close" cname="gdk_pixbuf_loader_close">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetAnimation" cname="gdk_pixbuf_loader_get_animation">
        <return-type type="GdkPixbufAnimation*" />
      </method>
      <method name="GetFormat" cname="gdk_pixbuf_loader_get_format">
        <return-type type="GdkPixbufFormat*" />
      </method>
      <method name="GetPixbuf" cname="gdk_pixbuf_loader_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_loader_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_pixbuf_loader_new" />
      <constructor cname="gdk_pixbuf_loader_new_with_mime_type">
        <parameters>
          <parameter type="const-char*" name="mime_type" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_loader_new_with_type">
        <parameters>
          <parameter type="const-char*" name="image_type" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="SetSize" cname="gdk_pixbuf_loader_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="Write" cname="gdk_pixbuf_loader_write">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-guchar*" name="buf" />
          <parameter type="gsize" name="count" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="WriteBytes" cname="gdk_pixbuf_loader_write_bytes">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GBytes*" name="buffer" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="PixbufSimpleAnim" cname="GdkPixbufSimpleAnim" parent="GdkPixbufAnimation">
      <class_struct cname="GdkPixbufSimpleAnimClass">
        <field name="ParentClass" cname="parent_class" type="GdkPixbufAnimationClass" />
      </class_struct>
      <property name="Loop" cname="loop" type="gboolean" readable="true" writeable="true" />
      <method name="AddFrame" cname="gdk_pixbuf_simple_anim_add_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="GetLoop" cname="gdk_pixbuf_simple_anim_get_loop">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_simple_anim_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_pixbuf_simple_anim_new">
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gfloat" name="rate" />
        </parameters>
      </constructor>
      <method name="SetLoop" cname="gdk_pixbuf_simple_anim_set_loop">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="loop" />
        </parameters>
      </method>
    </object>
    <struct name="GdipContext" cname="GdipContext" opaque="true" />
    <struct name="PixbufBufferQueue" cname="GdkPixbufBufferQueue" opaque="true" />
    <boxed name="PixbufFormat" cname="GdkPixbufFormat" opaque="true">
      <method name="Copy" cname="gdk_pixbuf_format_copy">
        <return-type type="GdkPixbufFormat*" owned="true" />
      </method>
      <method name="Free" cname="gdk_pixbuf_format_free">
        <return-type type="void" />
      </method>
      <method name="GetDescription" cname="gdk_pixbuf_format_get_description">
        <return-type type="gchar*" />
      </method>
      <method name="GetExtensions" cname="gdk_pixbuf_format_get_extensions">
        <return-type type="gchar**" />
      </method>
      <method name="GetLicense" cname="gdk_pixbuf_format_get_license">
        <return-type type="gchar*" />
      </method>
      <method name="GetMimeTypes" cname="gdk_pixbuf_format_get_mime_types">
        <return-type type="gchar**" />
      </method>
      <method name="GetName" cname="gdk_pixbuf_format_get_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_format_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsDisabled" cname="gdk_pixbuf_format_is_disabled">
        <return-type type="gboolean" />
      </method>
      <method name="IsSaveOptionSupported" cname="gdk_pixbuf_format_is_save_option_supported">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="option_key" />
        </parameters>
      </method>
      <method name="IsScalable" cname="gdk_pixbuf_format_is_scalable">
        <return-type type="gboolean" />
      </method>
      <method name="IsWritable" cname="gdk_pixbuf_format_is_writable">
        <return-type type="gboolean" />
      </method>
      <method name="SetDisabled" cname="gdk_pixbuf_format_set_disabled">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="disabled" />
        </parameters>
      </method>
    </boxed>
    <struct name="PixbufFrame" cname="GdkPixbufFrame">
      <field name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" />
      <field name="XOffset" cname="x_offset" type="int" />
      <field name="YOffset" cname="y_offset" type="int" />
      <field name="DelayTime" cname="delay_time" type="int" />
      <field name="Elapsed" cname="elapsed" type="int" />
      <field name="Action" cname="action" type="GdkPixbufFrameAction" />
      <field name="NeedRecomposite" cname="need_recomposite" type="gboolean" />
      <field name="BgTransparent" cname="bg_transparent" type="gboolean" />
      <field name="Composited" cname="composited" type="GdkPixbuf*" />
      <field name="Revert" cname="revert" type="GdkPixbuf*" />
    </struct>
    <struct name="PixbufNonAnim" cname="GdkPixbufNonAnim" opaque="true" />
    <struct name="PixbufNonAnimClass" cname="GdkPixbufNonAnimClass" opaque="true" />
    <struct name="PixbufNonAnimIter" cname="GdkPixbufNonAnimIter" opaque="true" />
    <struct name="PixbufNonAnimIterClass" cname="GdkPixbufNonAnimIterClass" opaque="true" />
    <struct name="PixbufScaledAnimIter" cname="GdkPixbufScaledAnimIter" opaque="true" />
    <struct name="PixbufScaledAnimIterClass" cname="GdkPixbufScaledAnimIterClass" opaque="true" />
    <struct name="PixbufSimpleAnimIter" cname="GdkPixbufSimpleAnimIter" opaque="true">
      <method name="GetType" cname="gdk_pixbuf_simple_anim_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </struct>
    <struct name="PixbufSimpleAnimIterClass" cname="GdkPixbufSimpleAnimIterClass" opaque="true" />
    <struct name="Pixdata" cname="GdkPixdata" deprecated="1">
      <field name="Magic" cname="magic" type="guint32" />
      <field name="Length" cname="length" type="gint32" />
      <field name="PixdataType" cname="pixdata_type" type="guint32" />
      <field name="Rowstride" cname="rowstride" type="guint32" />
      <field name="Width" cname="width" type="guint32" />
      <field name="Height" cname="height" type="guint32" />
      <field name="PixelData" cname="pixel_data" type="guint8*" />
    </struct>
    <struct name="Gif89" cname="Gif89" opaque="true" />
    <struct name="GifContext" cname="GifContext" opaque="true" />
    <struct name="IcnsBlockHeader" cname="IcnsBlockHeader" opaque="true" />
    <struct name="IconEntry" cname="IconEntry" opaque="true" />
    <struct name="LoadContext" cname="LoadContext" opaque="true" />
    <struct name="TGAColor" cname="TGAColor" opaque="true" />
    <struct name="TGAColormap" cname="TGAColormap" opaque="true" />
    <struct name="TGAContext" cname="TGAContext" opaque="true" />
    <struct name="TGAFooter" cname="TGAFooter" opaque="true" />
    <struct name="TGAHeader" cname="TGAHeader" opaque="true" />
    <struct name="TiffContext" cname="TiffContext" opaque="true" />
    <struct name="XBMData" cname="XBMData" opaque="true" />
    <struct name="XPMContext" cname="XPMContext" opaque="true" />
  </namespace>
</api>